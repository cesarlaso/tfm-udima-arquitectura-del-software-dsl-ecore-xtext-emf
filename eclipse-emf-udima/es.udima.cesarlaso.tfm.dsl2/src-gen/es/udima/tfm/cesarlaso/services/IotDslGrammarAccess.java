/*
 * generated by Xtext 2.12.0
 */
package es.udima.tfm.cesarlaso.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class IotDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class IotProyectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.IotProyect");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIotProyectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cProduct_codeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cProductCodeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cProductCodeEIntParserRuleCall_4_0 = (RuleCall)cProductCodeAssignment_4.eContents().get(0);
		private final Keyword cVersionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cVersionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cVersionEIntParserRuleCall_6_0 = (RuleCall)cVersionAssignment_6.eContents().get(0);
		private final Keyword cDevicesKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cDeploymentDeviceAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDeploymentDeviceDeviceParserRuleCall_9_0 = (RuleCall)cDeploymentDeviceAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cDeploymentDeviceAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cDeploymentDeviceDeviceParserRuleCall_10_1_0 = (RuleCall)cDeploymentDeviceAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cServersKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cServerAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cServerServerParserRuleCall_14_0 = (RuleCall)cServerAssignment_14.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cCommaKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cServerAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cServerServerParserRuleCall_15_1_0 = (RuleCall)cServerAssignment_15_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cProgramAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cProgramProgramParserRuleCall_17_0 = (RuleCall)cProgramAssignment_17.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		
		//IotProyect:
		//	'IotProyect'
		//	name=EString
		//	'{'
		//	'product_code' productCode=EInt
		//	'version' version=EInt
		//	'devices' '{' deploymentDevice+=Device ("," deploymentDevice+=Device)* '}'
		//	'servers' '{' server+=Server ("," server+=Server)* '}'
		//	program=Program
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'IotProyect' name=EString '{' 'product_code' productCode=EInt 'version' version=EInt 'devices' '{'
		//deploymentDevice+=Device ("," deploymentDevice+=Device)* '}' 'servers' '{' server+=Server ("," server+=Server)* '}'
		//program=Program '}'
		public Group getGroup() { return cGroup; }
		
		//'IotProyect'
		public Keyword getIotProyectKeyword_0() { return cIotProyectKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'product_code'
		public Keyword getProduct_codeKeyword_3() { return cProduct_codeKeyword_3; }
		
		//productCode=EInt
		public Assignment getProductCodeAssignment_4() { return cProductCodeAssignment_4; }
		
		//EInt
		public RuleCall getProductCodeEIntParserRuleCall_4_0() { return cProductCodeEIntParserRuleCall_4_0; }
		
		//'version'
		public Keyword getVersionKeyword_5() { return cVersionKeyword_5; }
		
		//version=EInt
		public Assignment getVersionAssignment_6() { return cVersionAssignment_6; }
		
		//EInt
		public RuleCall getVersionEIntParserRuleCall_6_0() { return cVersionEIntParserRuleCall_6_0; }
		
		//'devices'
		public Keyword getDevicesKeyword_7() { return cDevicesKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//deploymentDevice+=Device
		public Assignment getDeploymentDeviceAssignment_9() { return cDeploymentDeviceAssignment_9; }
		
		//Device
		public RuleCall getDeploymentDeviceDeviceParserRuleCall_9_0() { return cDeploymentDeviceDeviceParserRuleCall_9_0; }
		
		//("," deploymentDevice+=Device)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//deploymentDevice+=Device
		public Assignment getDeploymentDeviceAssignment_10_1() { return cDeploymentDeviceAssignment_10_1; }
		
		//Device
		public RuleCall getDeploymentDeviceDeviceParserRuleCall_10_1_0() { return cDeploymentDeviceDeviceParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'servers'
		public Keyword getServersKeyword_12() { return cServersKeyword_12; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13() { return cLeftCurlyBracketKeyword_13; }
		
		//server+=Server
		public Assignment getServerAssignment_14() { return cServerAssignment_14; }
		
		//Server
		public RuleCall getServerServerParserRuleCall_14_0() { return cServerServerParserRuleCall_14_0; }
		
		//("," server+=Server)*
		public Group getGroup_15() { return cGroup_15; }
		
		//","
		public Keyword getCommaKeyword_15_0() { return cCommaKeyword_15_0; }
		
		//server+=Server
		public Assignment getServerAssignment_15_1() { return cServerAssignment_15_1; }
		
		//Server
		public RuleCall getServerServerParserRuleCall_15_1_0() { return cServerServerParserRuleCall_15_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
		
		//program=Program
		public Assignment getProgramAssignment_17() { return cProgramAssignment_17; }
		
		//Program
		public RuleCall getProgramProgramParserRuleCall_17_0() { return cProgramProgramParserRuleCall_17_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_18() { return cRightCurlyBracketKeyword_18; }
	}
	public class DeviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Device");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimulatorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRaspberryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBeagleboneParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cESP8266ParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Device deploymentdevices::Device:
		//	Simulator | Raspberry | Beaglebone | ESP8266;
		@Override public ParserRule getRule() { return rule; }
		
		//Simulator | Raspberry | Beaglebone | ESP8266
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Simulator
		public RuleCall getSimulatorParserRuleCall_0() { return cSimulatorParserRuleCall_0; }
		
		//Raspberry
		public RuleCall getRaspberryParserRuleCall_1() { return cRaspberryParserRuleCall_1; }
		
		//Beaglebone
		public RuleCall getBeagleboneParserRuleCall_2() { return cBeagleboneParserRuleCall_2; }
		
		//ESP8266
		public RuleCall getESP8266ParserRuleCall_3() { return cESP8266ParserRuleCall_3; }
	}
	public class ServerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Server");
		private final RuleCall cJavaServerParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Server servers::Server:
		//	JavaServer;
		@Override public ParserRule getRule() { return rule; }
		
		//JavaServer
		public RuleCall getJavaServerParserRuleCall() { return cJavaServerParserRuleCall; }
	}
	public class PinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Pin");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDigitalInputPinParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDigitalOutputPinParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAnalogInputPinParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAnalogOutputPinParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Pin gpios::Pin:
		//	DigitalInputPin | DigitalOutputPin | AnalogInputPin | AnalogOutputPin;
		@Override public ParserRule getRule() { return rule; }
		
		//DigitalInputPin | DigitalOutputPin | AnalogInputPin | AnalogOutputPin
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DigitalInputPin
		public RuleCall getDigitalInputPinParserRuleCall_0() { return cDigitalInputPinParserRuleCall_0; }
		
		//DigitalOutputPin
		public RuleCall getDigitalOutputPinParserRuleCall_1() { return cDigitalOutputPinParserRuleCall_1; }
		
		//AnalogInputPin
		public RuleCall getAnalogInputPinParserRuleCall_2() { return cAnalogInputPinParserRuleCall_2; }
		
		//AnalogOutputPin
		public RuleCall getAnalogOutputPinParserRuleCall_3() { return cAnalogOutputPinParserRuleCall_3; }
	}
	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Event");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGpioInterruptedParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGpioButtonInputParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGpioButtonInputAccumulatorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cGpioButtonReleasedParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cGpioPulseInputParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cGpioAnalogReadParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cGpioAnalogReadPerformOnHighParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cGpioAnalogReadPerformOnLowParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cTimerEventParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cRemoteEventParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cNetworkConnectedParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cNetworkDisconnectedParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cServerConnectedParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cServerDisconnectedParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		
		//Event events::Event:
		//	GpioInterrupted | GpioButtonInput | GpioButtonInputAccumulator | GpioButtonReleased | GpioPulseInput | GpioAnalogRead
		//	| GpioAnalogReadPerformOnHigh | GpioAnalogReadPerformOnLow | TimerEvent | RemoteEvent | NetworkConnected |
		//	NetworkDisconnected | ServerConnected | ServerDisconnected;
		@Override public ParserRule getRule() { return rule; }
		
		//GpioInterrupted | GpioButtonInput | GpioButtonInputAccumulator | GpioButtonReleased | GpioPulseInput | GpioAnalogRead |
		//GpioAnalogReadPerformOnHigh | GpioAnalogReadPerformOnLow | TimerEvent | RemoteEvent | NetworkConnected |
		//NetworkDisconnected | ServerConnected | ServerDisconnected
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GpioInterrupted
		public RuleCall getGpioInterruptedParserRuleCall_0() { return cGpioInterruptedParserRuleCall_0; }
		
		//GpioButtonInput
		public RuleCall getGpioButtonInputParserRuleCall_1() { return cGpioButtonInputParserRuleCall_1; }
		
		//GpioButtonInputAccumulator
		public RuleCall getGpioButtonInputAccumulatorParserRuleCall_2() { return cGpioButtonInputAccumulatorParserRuleCall_2; }
		
		//GpioButtonReleased
		public RuleCall getGpioButtonReleasedParserRuleCall_3() { return cGpioButtonReleasedParserRuleCall_3; }
		
		//GpioPulseInput
		public RuleCall getGpioPulseInputParserRuleCall_4() { return cGpioPulseInputParserRuleCall_4; }
		
		//GpioAnalogRead
		public RuleCall getGpioAnalogReadParserRuleCall_5() { return cGpioAnalogReadParserRuleCall_5; }
		
		//GpioAnalogReadPerformOnHigh
		public RuleCall getGpioAnalogReadPerformOnHighParserRuleCall_6() { return cGpioAnalogReadPerformOnHighParserRuleCall_6; }
		
		//GpioAnalogReadPerformOnLow
		public RuleCall getGpioAnalogReadPerformOnLowParserRuleCall_7() { return cGpioAnalogReadPerformOnLowParserRuleCall_7; }
		
		//TimerEvent
		public RuleCall getTimerEventParserRuleCall_8() { return cTimerEventParserRuleCall_8; }
		
		//RemoteEvent
		public RuleCall getRemoteEventParserRuleCall_9() { return cRemoteEventParserRuleCall_9; }
		
		//NetworkConnected
		public RuleCall getNetworkConnectedParserRuleCall_10() { return cNetworkConnectedParserRuleCall_10; }
		
		//NetworkDisconnected
		public RuleCall getNetworkDisconnectedParserRuleCall_11() { return cNetworkDisconnectedParserRuleCall_11; }
		
		//ServerConnected
		public RuleCall getServerConnectedParserRuleCall_12() { return cServerConnectedParserRuleCall_12; }
		
		//ServerDisconnected
		public RuleCall getServerDisconnectedParserRuleCall_13() { return cServerDisconnectedParserRuleCall_13; }
	}
	public class TimerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Timer");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNowParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRepeatedParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cClockParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cCronParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Timer timers::Timer:
		//	Now | Repeated | Clock | Cron;
		@Override public ParserRule getRule() { return rule; }
		
		//Now | Repeated | Clock | Cron
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Now
		public RuleCall getNowParserRuleCall_0() { return cNowParserRuleCall_0; }
		
		//Repeated
		public RuleCall getRepeatedParserRuleCall_1() { return cRepeatedParserRuleCall_1; }
		
		//Clock
		public RuleCall getClockParserRuleCall_2() { return cClockParserRuleCall_2; }
		
		//Cron
		public RuleCall getCronParserRuleCall_3() { return cCronParserRuleCall_3; }
	}
	public class ActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Actuator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSequentialActuatorsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cChangeOutputParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cButtonOutputParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPulseOutputParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cBlinkOutputParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cBlinkTimerOutputParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cPwmParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cTransformToParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cRemoteActuatorParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cSystemCommandParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cDownloadParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cPlaySoundParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cBackgroundImageParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cDrawImageParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cPlayVideoParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cChangeStateActuatorParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		
		//Actuator events::Actuator:
		//	SequentialActuators | ChangeOutput | ButtonOutput | PulseOutput | BlinkOutput | BlinkTimerOutput | Pwm | TransformTo |
		//	RemoteActuator | SystemCommand | Download | PlaySound | BackgroundImage | DrawImage | PlayVideo | ChangeStateActuator;
		@Override public ParserRule getRule() { return rule; }
		
		//SequentialActuators | ChangeOutput | ButtonOutput | PulseOutput | BlinkOutput | BlinkTimerOutput | Pwm | TransformTo |
		//RemoteActuator | SystemCommand | Download | PlaySound | BackgroundImage | DrawImage | PlayVideo | ChangeStateActuator
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SequentialActuators
		public RuleCall getSequentialActuatorsParserRuleCall_0() { return cSequentialActuatorsParserRuleCall_0; }
		
		//ChangeOutput
		public RuleCall getChangeOutputParserRuleCall_1() { return cChangeOutputParserRuleCall_1; }
		
		//ButtonOutput
		public RuleCall getButtonOutputParserRuleCall_2() { return cButtonOutputParserRuleCall_2; }
		
		//PulseOutput
		public RuleCall getPulseOutputParserRuleCall_3() { return cPulseOutputParserRuleCall_3; }
		
		//BlinkOutput
		public RuleCall getBlinkOutputParserRuleCall_4() { return cBlinkOutputParserRuleCall_4; }
		
		//BlinkTimerOutput
		public RuleCall getBlinkTimerOutputParserRuleCall_5() { return cBlinkTimerOutputParserRuleCall_5; }
		
		//Pwm
		public RuleCall getPwmParserRuleCall_6() { return cPwmParserRuleCall_6; }
		
		//TransformTo
		public RuleCall getTransformToParserRuleCall_7() { return cTransformToParserRuleCall_7; }
		
		//RemoteActuator
		public RuleCall getRemoteActuatorParserRuleCall_8() { return cRemoteActuatorParserRuleCall_8; }
		
		//SystemCommand
		public RuleCall getSystemCommandParserRuleCall_9() { return cSystemCommandParserRuleCall_9; }
		
		//Download
		public RuleCall getDownloadParserRuleCall_10() { return cDownloadParserRuleCall_10; }
		
		//PlaySound
		public RuleCall getPlaySoundParserRuleCall_11() { return cPlaySoundParserRuleCall_11; }
		
		//BackgroundImage
		public RuleCall getBackgroundImageParserRuleCall_12() { return cBackgroundImageParserRuleCall_12; }
		
		//DrawImage
		public RuleCall getDrawImageParserRuleCall_13() { return cDrawImageParserRuleCall_13; }
		
		//PlayVideo
		public RuleCall getPlayVideoParserRuleCall_14() { return cPlayVideoParserRuleCall_14; }
		
		//ChangeStateActuator
		public RuleCall getChangeStateActuatorParserRuleCall_15() { return cChangeStateActuatorParserRuleCall_15; }
	}
	public class RemoteIdentifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.RemoteIdentifier");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRemoteEventIdentifierParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRemoteActuatorIdentifierParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RemoteIdentifier communicationsprograms::RemoteIdentifier:
		//	RemoteEventIdentifier | RemoteActuatorIdentifier;
		@Override public ParserRule getRule() { return rule; }
		
		//RemoteEventIdentifier | RemoteActuatorIdentifier
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RemoteEventIdentifier
		public RuleCall getRemoteEventIdentifierParserRuleCall_0() { return cRemoteEventIdentifierParserRuleCall_0; }
		
		//RemoteActuatorIdentifier
		public RuleCall getRemoteActuatorIdentifierParserRuleCall_1() { return cRemoteActuatorIdentifierParserRuleCall_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class ELongElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.ELong");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ELong ecore::ELong:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class ProgramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Program");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProgramKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cGpio_aliasesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cGpioAliasesAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cGpioAliasesPinParserRuleCall_2_2_0 = (RuleCall)cGpioAliasesAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cCommaKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cGpioAliasesAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cGpioAliasesPinParserRuleCall_2_3_1_0 = (RuleCall)cGpioAliasesAssignment_2_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRemote_identifiersKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cRemoteIdentifiersAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cRemoteIdentifiersRemoteIdentifierParserRuleCall_3_2_0 = (RuleCall)cRemoteIdentifiersAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cRemoteIdentifiersAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cRemoteIdentifiersRemoteIdentifierParserRuleCall_3_3_1_0 = (RuleCall)cRemoteIdentifiersAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cFilesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cFilesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cFilesFilePathParserRuleCall_4_2_0 = (RuleCall)cFilesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cFilesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cFilesFilePathParserRuleCall_4_3_1_0 = (RuleCall)cFilesAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cStart_stateKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cStateAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cStateProgramStateCrossReference_6_0 = (CrossReference)cStateAssignment_6.eContents().get(0);
		private final RuleCall cStateProgramStateEStringParserRuleCall_6_0_1 = (RuleCall)cStateProgramStateCrossReference_6_0.eContents().get(1);
		private final Keyword cStatesKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cStatesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cStatesProgramStateParserRuleCall_9_0 = (RuleCall)cStatesAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cStatesAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cStatesProgramStateParserRuleCall_10_1_0 = (RuleCall)cStatesAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Program programs::Program:
		//	'program'
		//	'{' ('gpio_aliases' '{' gpioAliases+=Pin ("," gpioAliases+=Pin)* '}')? ('remote_identifiers' '{'
		//	remoteIdentifiers+=RemoteIdentifier ("," remoteIdentifiers+=RemoteIdentifier)* '}')? ('files' '{' files+=FilePath (","
		//	files+=FilePath)* '}')?
		//	'start_state' state=[programs::ProgramState|EString]
		//	'states' '{' states+=ProgramState ("," states+=ProgramState)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'program' '{' ('gpio_aliases' '{' gpioAliases+=Pin ("," gpioAliases+=Pin)* '}')? ('remote_identifiers' '{'
		//remoteIdentifiers+=RemoteIdentifier ("," remoteIdentifiers+=RemoteIdentifier)* '}')? ('files' '{' files+=FilePath (","
		//files+=FilePath)* '}')? 'start_state' state=[programs::ProgramState|EString] 'states' '{' states+=ProgramState (","
		//states+=ProgramState)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'program'
		public Keyword getProgramKeyword_0() { return cProgramKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('gpio_aliases' '{' gpioAliases+=Pin ("," gpioAliases+=Pin)* '}')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'gpio_aliases'
		public Keyword getGpio_aliasesKeyword_2_0() { return cGpio_aliasesKeyword_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1() { return cLeftCurlyBracketKeyword_2_1; }
		
		//gpioAliases+=Pin
		public Assignment getGpioAliasesAssignment_2_2() { return cGpioAliasesAssignment_2_2; }
		
		//Pin
		public RuleCall getGpioAliasesPinParserRuleCall_2_2_0() { return cGpioAliasesPinParserRuleCall_2_2_0; }
		
		//("," gpioAliases+=Pin)*
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//","
		public Keyword getCommaKeyword_2_3_0() { return cCommaKeyword_2_3_0; }
		
		//gpioAliases+=Pin
		public Assignment getGpioAliasesAssignment_2_3_1() { return cGpioAliasesAssignment_2_3_1; }
		
		//Pin
		public RuleCall getGpioAliasesPinParserRuleCall_2_3_1_0() { return cGpioAliasesPinParserRuleCall_2_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
		
		//('remote_identifiers' '{' remoteIdentifiers+=RemoteIdentifier ("," remoteIdentifiers+=RemoteIdentifier)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'remote_identifiers'
		public Keyword getRemote_identifiersKeyword_3_0() { return cRemote_identifiersKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//remoteIdentifiers+=RemoteIdentifier
		public Assignment getRemoteIdentifiersAssignment_3_2() { return cRemoteIdentifiersAssignment_3_2; }
		
		//RemoteIdentifier
		public RuleCall getRemoteIdentifiersRemoteIdentifierParserRuleCall_3_2_0() { return cRemoteIdentifiersRemoteIdentifierParserRuleCall_3_2_0; }
		
		//("," remoteIdentifiers+=RemoteIdentifier)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//remoteIdentifiers+=RemoteIdentifier
		public Assignment getRemoteIdentifiersAssignment_3_3_1() { return cRemoteIdentifiersAssignment_3_3_1; }
		
		//RemoteIdentifier
		public RuleCall getRemoteIdentifiersRemoteIdentifierParserRuleCall_3_3_1_0() { return cRemoteIdentifiersRemoteIdentifierParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('files' '{' files+=FilePath ("," files+=FilePath)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'files'
		public Keyword getFilesKeyword_4_0() { return cFilesKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//files+=FilePath
		public Assignment getFilesAssignment_4_2() { return cFilesAssignment_4_2; }
		
		//FilePath
		public RuleCall getFilesFilePathParserRuleCall_4_2_0() { return cFilesFilePathParserRuleCall_4_2_0; }
		
		//("," files+=FilePath)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//files+=FilePath
		public Assignment getFilesAssignment_4_3_1() { return cFilesAssignment_4_3_1; }
		
		//FilePath
		public RuleCall getFilesFilePathParserRuleCall_4_3_1_0() { return cFilesFilePathParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'start_state'
		public Keyword getStart_stateKeyword_5() { return cStart_stateKeyword_5; }
		
		//state=[programs::ProgramState|EString]
		public Assignment getStateAssignment_6() { return cStateAssignment_6; }
		
		//[programs::ProgramState|EString]
		public CrossReference getStateProgramStateCrossReference_6_0() { return cStateProgramStateCrossReference_6_0; }
		
		//EString
		public RuleCall getStateProgramStateEStringParserRuleCall_6_0_1() { return cStateProgramStateEStringParserRuleCall_6_0_1; }
		
		//'states'
		public Keyword getStatesKeyword_7() { return cStatesKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//states+=ProgramState
		public Assignment getStatesAssignment_9() { return cStatesAssignment_9; }
		
		//ProgramState
		public RuleCall getStatesProgramStateParserRuleCall_9_0() { return cStatesProgramStateParserRuleCall_9_0; }
		
		//("," states+=ProgramState)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//states+=ProgramState
		public Assignment getStatesAssignment_10_1() { return cStatesAssignment_10_1; }
		
		//ProgramState
		public RuleCall getStatesProgramStateParserRuleCall_10_1_0() { return cStatesProgramStateParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class ProgramStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.ProgramState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEventsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEventsEventParserRuleCall_3_0 = (RuleCall)cEventsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cEventsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cEventsEventParserRuleCall_4_1_0 = (RuleCall)cEventsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ProgramState programs::ProgramState:
		//	'state'
		//	name=EString
		//	'{' events+=Event ("," events+=Event)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'state' name=EString '{' events+=Event ("," events+=Event)* '}'
		public Group getGroup() { return cGroup; }
		
		//'state'
		public Keyword getStateKeyword_0() { return cStateKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//events+=Event
		public Assignment getEventsAssignment_3() { return cEventsAssignment_3; }
		
		//Event
		public RuleCall getEventsEventParserRuleCall_3_0() { return cEventsEventParserRuleCall_3_0; }
		
		//("," events+=Event)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//events+=Event
		public Assignment getEventsAssignment_4_1() { return cEventsAssignment_4_1; }
		
		//Event
		public RuleCall getEventsEventParserRuleCall_4_1_0() { return cEventsEventParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class NetworkConnectedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.NetworkConnected");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNetwork_connectedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActuatorsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActuatorsActuatorParserRuleCall_2_0 = (RuleCall)cActuatorsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cActuatorsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_3_1_0 = (RuleCall)cActuatorsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//NetworkConnected communicationsevents::NetworkConnected:
		//	'network_connected'
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'network_connected' '{' actuators+=Actuator ("," actuators+=Actuator)* '}'
		public Group getGroup() { return cGroup; }
		
		//'network_connected'
		public Keyword getNetwork_connectedKeyword_0() { return cNetwork_connectedKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_2() { return cActuatorsAssignment_2; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_2_0() { return cActuatorsActuatorParserRuleCall_2_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_3() { return cGroup_3; }
		
		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_3_1() { return cActuatorsAssignment_3_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_3_1_0() { return cActuatorsActuatorParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class NetworkDisconnectedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.NetworkDisconnected");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNetwork_disconnectedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActuatorsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActuatorsActuatorParserRuleCall_2_0 = (RuleCall)cActuatorsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cActuatorsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_3_1_0 = (RuleCall)cActuatorsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//NetworkDisconnected communicationsevents::NetworkDisconnected:
		//	'network_disconnected'
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'network_disconnected' '{' actuators+=Actuator ("," actuators+=Actuator)* '}'
		public Group getGroup() { return cGroup; }
		
		//'network_disconnected'
		public Keyword getNetwork_disconnectedKeyword_0() { return cNetwork_disconnectedKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_2() { return cActuatorsAssignment_2; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_2_0() { return cActuatorsActuatorParserRuleCall_2_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_3() { return cGroup_3; }
		
		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_3_1() { return cActuatorsAssignment_3_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_3_1_0() { return cActuatorsActuatorParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ServerConnectedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.ServerConnected");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServer_connectedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActuatorsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActuatorsActuatorParserRuleCall_2_0 = (RuleCall)cActuatorsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cActuatorsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_3_1_0 = (RuleCall)cActuatorsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ServerConnected communicationsevents::ServerConnected:
		//	'server_connected'
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'server_connected' '{' actuators+=Actuator ("," actuators+=Actuator)* '}'
		public Group getGroup() { return cGroup; }
		
		//'server_connected'
		public Keyword getServer_connectedKeyword_0() { return cServer_connectedKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_2() { return cActuatorsAssignment_2; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_2_0() { return cActuatorsActuatorParserRuleCall_2_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_3() { return cGroup_3; }
		
		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_3_1() { return cActuatorsAssignment_3_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_3_1_0() { return cActuatorsActuatorParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ServerDisconnectedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.ServerDisconnected");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServer_disconnectedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActuatorsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActuatorsActuatorParserRuleCall_2_0 = (RuleCall)cActuatorsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cActuatorsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_3_1_0 = (RuleCall)cActuatorsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ServerDisconnected communicationsevents::ServerDisconnected:
		//	'server_disconnected'
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'server_disconnected' '{' actuators+=Actuator ("," actuators+=Actuator)* '}'
		public Group getGroup() { return cGroup; }
		
		//'server_disconnected'
		public Keyword getServer_disconnectedKeyword_0() { return cServer_disconnectedKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_2() { return cActuatorsAssignment_2; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_2_0() { return cActuatorsActuatorParserRuleCall_2_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_3() { return cGroup_3; }
		
		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_3_1() { return cActuatorsAssignment_3_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_3_1_0() { return cActuatorsActuatorParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class TimerEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.TimerEvent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTimerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTimerAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTimerTimerParserRuleCall_2_0 = (RuleCall)cTimerAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cActuatorsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cActuatorsActuatorParserRuleCall_4_0 = (RuleCall)cActuatorsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cActuatorsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_5_1_0 = (RuleCall)cActuatorsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//TimerEvent timers::TimerEvent:
		//	'timer'
		//	'{'
		//	timer=Timer
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'timer' '{' timer=Timer '{' actuators+=Actuator ("," actuators+=Actuator)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'timer'
		public Keyword getTimerKeyword_0() { return cTimerKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//timer=Timer
		public Assignment getTimerAssignment_2() { return cTimerAssignment_2; }
		
		//Timer
		public RuleCall getTimerTimerParserRuleCall_2_0() { return cTimerTimerParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_4() { return cActuatorsAssignment_4; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_4_0() { return cActuatorsActuatorParserRuleCall_4_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_5_1() { return cActuatorsAssignment_5_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_5_1_0() { return cActuatorsActuatorParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class NowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Now");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Action cNowAction_1 = (Action)cGroup.eContents().get(1);
		
		//Now timers::Now:
		//	'now' {timers::Now};
		@Override public ParserRule getRule() { return rule; }
		
		//'now' {timers::Now}
		public Group getGroup() { return cGroup; }
		
		//'now'
		public Keyword getNowKeyword_0() { return cNowKeyword_0; }
		
		//{timers::Now}
		public Action getNowAction_1() { return cNowAction_1; }
	}
	public class RepeatedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Repeated");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRepeat_everyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTimeUnitValueParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//Repeated timers::Repeated:
		//	'repeat_every'
		//	value=TimeUnitValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'repeat_every' value=TimeUnitValue
		public Group getGroup() { return cGroup; }
		
		//'repeat_every'
		public Keyword getRepeat_everyKeyword_0() { return cRepeat_everyKeyword_0; }
		
		//value=TimeUnitValue
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }
		
		//TimeUnitValue
		public RuleCall getValueTimeUnitValueParserRuleCall_1_0() { return cValueTimeUnitValueParserRuleCall_1_0; }
	}
	public class ClockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Clock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClockKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTimeParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//Clock timers::Clock:
		//	'clock'
		//	value=Time;
		@Override public ParserRule getRule() { return rule; }
		
		//'clock' value=Time
		public Group getGroup() { return cGroup; }
		
		//'clock'
		public Keyword getClockKeyword_0() { return cClockKeyword_0; }
		
		//value=Time
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }
		
		//Time
		public RuleCall getValueTimeParserRuleCall_1_0() { return cValueTimeParserRuleCall_1_0; }
	}
	public class CronElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Cron");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCronKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//Cron timers::Cron:
		//	'cron'
		//	value=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//'cron' value=EString
		public Group getGroup() { return cGroup; }
		
		//'cron'
		public Keyword getCronKeyword_0() { return cCronKeyword_0; }
		
		//value=EString
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_1_0() { return cValueEStringParserRuleCall_1_0; }
	}
	public class GpioInterruptedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.GpioInterrupted");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInterruptedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinDigitalInputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinDigitalInputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinDigitalInputPinCrossReference_1_0.eContents().get(1);
		private final Assignment cModeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cModeGpioInterruptModeEnumRuleCall_2_0 = (RuleCall)cModeAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cActuatorsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cActuatorsActuatorParserRuleCall_4_0 = (RuleCall)cActuatorsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cActuatorsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_5_1_0 = (RuleCall)cActuatorsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//GpioInterrupted gpiosevents::Interrupted:
		//	'interrupted'
		//	pin=[gpios::DigitalInputPin|EString] mode=GpioInterruptMode
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'interrupted' pin=[gpios::DigitalInputPin|EString] mode=GpioInterruptMode '{' actuators+=Actuator (","
		//actuators+=Actuator)* '}'
		public Group getGroup() { return cGroup; }
		
		//'interrupted'
		public Keyword getInterruptedKeyword_0() { return cInterruptedKeyword_0; }
		
		//pin=[gpios::DigitalInputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::DigitalInputPin|EString]
		public CrossReference getPinDigitalInputPinCrossReference_1_0() { return cPinDigitalInputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinDigitalInputPinEStringParserRuleCall_1_0_1() { return cPinDigitalInputPinEStringParserRuleCall_1_0_1; }
		
		//mode=GpioInterruptMode
		public Assignment getModeAssignment_2() { return cModeAssignment_2; }
		
		//GpioInterruptMode
		public RuleCall getModeGpioInterruptModeEnumRuleCall_2_0() { return cModeGpioInterruptModeEnumRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_4() { return cActuatorsAssignment_4; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_4_0() { return cActuatorsActuatorParserRuleCall_4_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_5_1() { return cActuatorsAssignment_5_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_5_1_0() { return cActuatorsActuatorParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class GpioButtonInputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.GpioButtonInput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cButtonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinDigitalInputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinDigitalInputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinDigitalInputPinCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cModeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cModeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cModePinResistorEnumRuleCall_4_0 = (RuleCall)cModeAssignment_4.eContents().get(0);
		private final Keyword cMin_durationKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMinDurationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMinDurationEIntParserRuleCall_6_0 = (RuleCall)cMinDurationAssignment_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cActuatorsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cActuatorsActuatorParserRuleCall_8_0 = (RuleCall)cActuatorsAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cActuatorsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_9_1_0 = (RuleCall)cActuatorsAssignment_9_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//GpioButtonInput gpiosevents::ButtonInput:
		//	'button'
		//	pin=[gpios::DigitalInputPin|EString]
		//	'{'
		//	'mode' mode=PinResistor
		//	'min_duration' minDuration=EInt
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'button' pin=[gpios::DigitalInputPin|EString] '{' 'mode' mode=PinResistor 'min_duration' minDuration=EInt '{'
		//actuators+=Actuator ("," actuators+=Actuator)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'button'
		public Keyword getButtonKeyword_0() { return cButtonKeyword_0; }
		
		//pin=[gpios::DigitalInputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::DigitalInputPin|EString]
		public CrossReference getPinDigitalInputPinCrossReference_1_0() { return cPinDigitalInputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinDigitalInputPinEStringParserRuleCall_1_0_1() { return cPinDigitalInputPinEStringParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'mode'
		public Keyword getModeKeyword_3() { return cModeKeyword_3; }
		
		//mode=PinResistor
		public Assignment getModeAssignment_4() { return cModeAssignment_4; }
		
		//PinResistor
		public RuleCall getModePinResistorEnumRuleCall_4_0() { return cModePinResistorEnumRuleCall_4_0; }
		
		//'min_duration'
		public Keyword getMin_durationKeyword_5() { return cMin_durationKeyword_5; }
		
		//minDuration=EInt
		public Assignment getMinDurationAssignment_6() { return cMinDurationAssignment_6; }
		
		//EInt
		public RuleCall getMinDurationEIntParserRuleCall_6_0() { return cMinDurationEIntParserRuleCall_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_8() { return cActuatorsAssignment_8; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_8_0() { return cActuatorsActuatorParserRuleCall_8_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_9() { return cGroup_9; }
		
		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_9_1() { return cActuatorsAssignment_9_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_9_1_0() { return cActuatorsActuatorParserRuleCall_9_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class GpioButtonInputAccumulatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.GpioButtonInputAccumulator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cButton_acumulatorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinDigitalInputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinDigitalInputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinDigitalInputPinCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cModeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cModeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cModePinResistorEnumRuleCall_4_0 = (RuleCall)cModeAssignment_4.eContents().get(0);
		private final Keyword cMin_durationKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMinDurationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMinDurationEIntParserRuleCall_6_0 = (RuleCall)cMinDurationAssignment_6.eContents().get(0);
		private final Keyword cCountKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cCountAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCountEIntParserRuleCall_8_0 = (RuleCall)cCountAssignment_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cActuatorsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cActuatorsActuatorParserRuleCall_10_0 = (RuleCall)cActuatorsAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cActuatorsAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_11_1_0 = (RuleCall)cActuatorsAssignment_11_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//GpioButtonInputAccumulator gpiosevents::ButtonInputAccumulator:
		//	'button_acumulator'
		//	pin=[gpios::DigitalInputPin|EString]
		//	'{'
		//	'mode' mode=PinResistor
		//	'min_duration' minDuration=EInt
		//	'count' count=EInt
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'button_acumulator' pin=[gpios::DigitalInputPin|EString] '{' 'mode' mode=PinResistor 'min_duration' minDuration=EInt
		//'count' count=EInt '{' actuators+=Actuator ("," actuators+=Actuator)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'button_acumulator'
		public Keyword getButton_acumulatorKeyword_0() { return cButton_acumulatorKeyword_0; }
		
		//pin=[gpios::DigitalInputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::DigitalInputPin|EString]
		public CrossReference getPinDigitalInputPinCrossReference_1_0() { return cPinDigitalInputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinDigitalInputPinEStringParserRuleCall_1_0_1() { return cPinDigitalInputPinEStringParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'mode'
		public Keyword getModeKeyword_3() { return cModeKeyword_3; }
		
		//mode=PinResistor
		public Assignment getModeAssignment_4() { return cModeAssignment_4; }
		
		//PinResistor
		public RuleCall getModePinResistorEnumRuleCall_4_0() { return cModePinResistorEnumRuleCall_4_0; }
		
		//'min_duration'
		public Keyword getMin_durationKeyword_5() { return cMin_durationKeyword_5; }
		
		//minDuration=EInt
		public Assignment getMinDurationAssignment_6() { return cMinDurationAssignment_6; }
		
		//EInt
		public RuleCall getMinDurationEIntParserRuleCall_6_0() { return cMinDurationEIntParserRuleCall_6_0; }
		
		//'count'
		public Keyword getCountKeyword_7() { return cCountKeyword_7; }
		
		//count=EInt
		public Assignment getCountAssignment_8() { return cCountAssignment_8; }
		
		//EInt
		public RuleCall getCountEIntParserRuleCall_8_0() { return cCountEIntParserRuleCall_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_10() { return cActuatorsAssignment_10; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_10_0() { return cActuatorsActuatorParserRuleCall_10_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_11() { return cGroup_11; }
		
		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_11_1() { return cActuatorsAssignment_11_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_11_1_0() { return cActuatorsActuatorParserRuleCall_11_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class GpioButtonReleasedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.GpioButtonReleased");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cButton_releasedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinDigitalInputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinDigitalInputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinDigitalInputPinCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cModeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cModeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cModePinResistorEnumRuleCall_4_0 = (RuleCall)cModeAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cActuatorsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cActuatorsActuatorParserRuleCall_6_0 = (RuleCall)cActuatorsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cActuatorsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_7_1_0 = (RuleCall)cActuatorsAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//GpioButtonReleased gpiosevents::ButtonInputReleased:
		//	'button_released'
		//	pin=[gpios::DigitalInputPin|EString]
		//	'{'
		//	'mode' mode=PinResistor
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'button_released' pin=[gpios::DigitalInputPin|EString] '{' 'mode' mode=PinResistor '{' actuators+=Actuator (","
		//actuators+=Actuator)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'button_released'
		public Keyword getButton_releasedKeyword_0() { return cButton_releasedKeyword_0; }
		
		//pin=[gpios::DigitalInputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::DigitalInputPin|EString]
		public CrossReference getPinDigitalInputPinCrossReference_1_0() { return cPinDigitalInputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinDigitalInputPinEStringParserRuleCall_1_0_1() { return cPinDigitalInputPinEStringParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'mode'
		public Keyword getModeKeyword_3() { return cModeKeyword_3; }
		
		//mode=PinResistor
		public Assignment getModeAssignment_4() { return cModeAssignment_4; }
		
		//PinResistor
		public RuleCall getModePinResistorEnumRuleCall_4_0() { return cModePinResistorEnumRuleCall_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_6() { return cActuatorsAssignment_6; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_6_0() { return cActuatorsActuatorParserRuleCall_6_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_7_1() { return cActuatorsAssignment_7_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_7_1_0() { return cActuatorsActuatorParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class GpioPulseInputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.GpioPulseInput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPulse_inputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinDigitalInputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinDigitalInputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinDigitalInputPinCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cModeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cModeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cModePinResistorEnumRuleCall_4_0 = (RuleCall)cModeAssignment_4.eContents().get(0);
		private final Keyword cCountKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cCountAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cCountEIntParserRuleCall_6_0 = (RuleCall)cCountAssignment_6.eContents().get(0);
		private final Keyword cWidthKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cWidthAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cWidthEIntParserRuleCall_8_0 = (RuleCall)cWidthAssignment_8.eContents().get(0);
		private final Keyword cSpace_widthKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cSpaceWidthAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cSpaceWidthEIntParserRuleCall_10_0 = (RuleCall)cSpaceWidthAssignment_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cActuatorsAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cActuatorsActuatorParserRuleCall_12_0 = (RuleCall)cActuatorsAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cCommaKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cActuatorsAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_13_1_0 = (RuleCall)cActuatorsAssignment_13_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//GpioPulseInput gpiosevents::PulseInput:
		//	'pulse_input'
		//	pin=[gpios::DigitalInputPin|EString]
		//	'{'
		//	'mode' mode=PinResistor
		//	'count' count=EInt
		//	'width' width=EInt
		//	'space_width' spaceWidth=EInt
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'pulse_input' pin=[gpios::DigitalInputPin|EString] '{' 'mode' mode=PinResistor 'count' count=EInt 'width' width=EInt
		//'space_width' spaceWidth=EInt '{' actuators+=Actuator ("," actuators+=Actuator)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'pulse_input'
		public Keyword getPulse_inputKeyword_0() { return cPulse_inputKeyword_0; }
		
		//pin=[gpios::DigitalInputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::DigitalInputPin|EString]
		public CrossReference getPinDigitalInputPinCrossReference_1_0() { return cPinDigitalInputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinDigitalInputPinEStringParserRuleCall_1_0_1() { return cPinDigitalInputPinEStringParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'mode'
		public Keyword getModeKeyword_3() { return cModeKeyword_3; }
		
		//mode=PinResistor
		public Assignment getModeAssignment_4() { return cModeAssignment_4; }
		
		//PinResistor
		public RuleCall getModePinResistorEnumRuleCall_4_0() { return cModePinResistorEnumRuleCall_4_0; }
		
		//'count'
		public Keyword getCountKeyword_5() { return cCountKeyword_5; }
		
		//count=EInt
		public Assignment getCountAssignment_6() { return cCountAssignment_6; }
		
		//EInt
		public RuleCall getCountEIntParserRuleCall_6_0() { return cCountEIntParserRuleCall_6_0; }
		
		//'width'
		public Keyword getWidthKeyword_7() { return cWidthKeyword_7; }
		
		//width=EInt
		public Assignment getWidthAssignment_8() { return cWidthAssignment_8; }
		
		//EInt
		public RuleCall getWidthEIntParserRuleCall_8_0() { return cWidthEIntParserRuleCall_8_0; }
		
		//'space_width'
		public Keyword getSpace_widthKeyword_9() { return cSpace_widthKeyword_9; }
		
		//spaceWidth=EInt
		public Assignment getSpaceWidthAssignment_10() { return cSpaceWidthAssignment_10; }
		
		//EInt
		public RuleCall getSpaceWidthEIntParserRuleCall_10_0() { return cSpaceWidthEIntParserRuleCall_10_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11() { return cLeftCurlyBracketKeyword_11; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_12() { return cActuatorsAssignment_12; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_12_0() { return cActuatorsActuatorParserRuleCall_12_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_13() { return cGroup_13; }
		
		//","
		public Keyword getCommaKeyword_13_0() { return cCommaKeyword_13_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_13_1() { return cActuatorsAssignment_13_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_13_1_0() { return cActuatorsActuatorParserRuleCall_13_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}
	public class GpioAnalogReadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.GpioAnalogRead");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnalog_readKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinAnalogInputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinAnalogInputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinAnalogInputPinCrossReference_1_0.eContents().get(1);
		private final Keyword cEveryKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPollIntervalLoopsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPollIntervalLoopsEIntParserRuleCall_3_0 = (RuleCall)cPollIntervalLoopsAssignment_3.eContents().get(0);
		private final Keyword cLoopsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cActuatorsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cActuatorsActuatorParserRuleCall_6_0 = (RuleCall)cActuatorsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cActuatorsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_7_1_0 = (RuleCall)cActuatorsAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//GpioAnalogRead gpiosevents::AnalogRead:
		//	'analog_read'
		//	pin=[gpios::AnalogInputPin|EString]
		//	'every' pollIntervalLoops=EInt 'loops'
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'analog_read' pin=[gpios::AnalogInputPin|EString] 'every' pollIntervalLoops=EInt 'loops' '{' actuators+=Actuator (","
		//actuators+=Actuator)* '}'
		public Group getGroup() { return cGroup; }
		
		//'analog_read'
		public Keyword getAnalog_readKeyword_0() { return cAnalog_readKeyword_0; }
		
		//pin=[gpios::AnalogInputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::AnalogInputPin|EString]
		public CrossReference getPinAnalogInputPinCrossReference_1_0() { return cPinAnalogInputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinAnalogInputPinEStringParserRuleCall_1_0_1() { return cPinAnalogInputPinEStringParserRuleCall_1_0_1; }
		
		//'every'
		public Keyword getEveryKeyword_2() { return cEveryKeyword_2; }
		
		//pollIntervalLoops=EInt
		public Assignment getPollIntervalLoopsAssignment_3() { return cPollIntervalLoopsAssignment_3; }
		
		//EInt
		public RuleCall getPollIntervalLoopsEIntParserRuleCall_3_0() { return cPollIntervalLoopsEIntParserRuleCall_3_0; }
		
		//'loops'
		public Keyword getLoopsKeyword_4() { return cLoopsKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_6() { return cActuatorsAssignment_6; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_6_0() { return cActuatorsActuatorParserRuleCall_6_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_7_1() { return cActuatorsAssignment_7_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_7_1_0() { return cActuatorsActuatorParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class GpioAnalogReadPerformOnHighElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.GpioAnalogReadPerformOnHigh");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnalog_read_on_highKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinAnalogInputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinAnalogInputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinAnalogInputPinCrossReference_1_0.eContents().get(1);
		private final Keyword cEveryKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPollIntervalLoopsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPollIntervalLoopsEIntParserRuleCall_3_0 = (RuleCall)cPollIntervalLoopsAssignment_3.eContents().get(0);
		private final Keyword cLoopsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cValue_higher_thanKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cValueAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cValueEIntParserRuleCall_6_0 = (RuleCall)cValueAssignment_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cActuatorsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cActuatorsActuatorParserRuleCall_8_0 = (RuleCall)cActuatorsAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cActuatorsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_9_1_0 = (RuleCall)cActuatorsAssignment_9_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//GpioAnalogReadPerformOnHigh gpiosevents::AnalogReadPerformOnHigh:
		//	'analog_read_on_high'
		//	pin=[gpios::AnalogInputPin|EString]
		//	'every' pollIntervalLoops=EInt 'loops'
		//	'value_higher_than' value=EInt
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'analog_read_on_high' pin=[gpios::AnalogInputPin|EString] 'every' pollIntervalLoops=EInt 'loops' 'value_higher_than'
		//value=EInt '{' actuators+=Actuator ("," actuators+=Actuator)* '}'
		public Group getGroup() { return cGroup; }
		
		//'analog_read_on_high'
		public Keyword getAnalog_read_on_highKeyword_0() { return cAnalog_read_on_highKeyword_0; }
		
		//pin=[gpios::AnalogInputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::AnalogInputPin|EString]
		public CrossReference getPinAnalogInputPinCrossReference_1_0() { return cPinAnalogInputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinAnalogInputPinEStringParserRuleCall_1_0_1() { return cPinAnalogInputPinEStringParserRuleCall_1_0_1; }
		
		//'every'
		public Keyword getEveryKeyword_2() { return cEveryKeyword_2; }
		
		//pollIntervalLoops=EInt
		public Assignment getPollIntervalLoopsAssignment_3() { return cPollIntervalLoopsAssignment_3; }
		
		//EInt
		public RuleCall getPollIntervalLoopsEIntParserRuleCall_3_0() { return cPollIntervalLoopsEIntParserRuleCall_3_0; }
		
		//'loops'
		public Keyword getLoopsKeyword_4() { return cLoopsKeyword_4; }
		
		//'value_higher_than'
		public Keyword getValue_higher_thanKeyword_5() { return cValue_higher_thanKeyword_5; }
		
		//value=EInt
		public Assignment getValueAssignment_6() { return cValueAssignment_6; }
		
		//EInt
		public RuleCall getValueEIntParserRuleCall_6_0() { return cValueEIntParserRuleCall_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_8() { return cActuatorsAssignment_8; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_8_0() { return cActuatorsActuatorParserRuleCall_8_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_9() { return cGroup_9; }
		
		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_9_1() { return cActuatorsAssignment_9_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_9_1_0() { return cActuatorsActuatorParserRuleCall_9_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class GpioAnalogReadPerformOnLowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.GpioAnalogReadPerformOnLow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnalog_read_on_lowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinAnalogInputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinAnalogInputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinAnalogInputPinCrossReference_1_0.eContents().get(1);
		private final Keyword cEveryKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPollIntervalLoopsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPollIntervalLoopsEIntParserRuleCall_3_0 = (RuleCall)cPollIntervalLoopsAssignment_3.eContents().get(0);
		private final Keyword cLoopsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cValue_lower_thanKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cValueAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cValueEIntParserRuleCall_6_0 = (RuleCall)cValueAssignment_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cActuatorsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cActuatorsActuatorParserRuleCall_8_0 = (RuleCall)cActuatorsAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cActuatorsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_9_1_0 = (RuleCall)cActuatorsAssignment_9_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//GpioAnalogReadPerformOnLow gpiosevents::AnalogReadPerformOnLow:
		//	'analog_read_on_low'
		//	pin=[gpios::AnalogInputPin|EString]
		//	'every' pollIntervalLoops=EInt 'loops'
		//	'value_lower_than' value=EInt
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'analog_read_on_low' pin=[gpios::AnalogInputPin|EString] 'every' pollIntervalLoops=EInt 'loops' 'value_lower_than'
		//value=EInt '{' actuators+=Actuator ("," actuators+=Actuator)* '}'
		public Group getGroup() { return cGroup; }
		
		//'analog_read_on_low'
		public Keyword getAnalog_read_on_lowKeyword_0() { return cAnalog_read_on_lowKeyword_0; }
		
		//pin=[gpios::AnalogInputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::AnalogInputPin|EString]
		public CrossReference getPinAnalogInputPinCrossReference_1_0() { return cPinAnalogInputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinAnalogInputPinEStringParserRuleCall_1_0_1() { return cPinAnalogInputPinEStringParserRuleCall_1_0_1; }
		
		//'every'
		public Keyword getEveryKeyword_2() { return cEveryKeyword_2; }
		
		//pollIntervalLoops=EInt
		public Assignment getPollIntervalLoopsAssignment_3() { return cPollIntervalLoopsAssignment_3; }
		
		//EInt
		public RuleCall getPollIntervalLoopsEIntParserRuleCall_3_0() { return cPollIntervalLoopsEIntParserRuleCall_3_0; }
		
		//'loops'
		public Keyword getLoopsKeyword_4() { return cLoopsKeyword_4; }
		
		//'value_lower_than'
		public Keyword getValue_lower_thanKeyword_5() { return cValue_lower_thanKeyword_5; }
		
		//value=EInt
		public Assignment getValueAssignment_6() { return cValueAssignment_6; }
		
		//EInt
		public RuleCall getValueEIntParserRuleCall_6_0() { return cValueEIntParserRuleCall_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_8() { return cActuatorsAssignment_8; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_8_0() { return cActuatorsActuatorParserRuleCall_8_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_9() { return cGroup_9; }
		
		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_9_1() { return cActuatorsAssignment_9_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_9_1_0() { return cActuatorsActuatorParserRuleCall_9_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class TimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Time");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cHourAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cHourEIntParserRuleCall_0_0 = (RuleCall)cHourAssignment_0.eContents().get(0);
		private final Keyword cHKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMinuteAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMinuteEIntParserRuleCall_2_0 = (RuleCall)cMinuteAssignment_2.eContents().get(0);
		private final Keyword cMKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSecondAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSecondEIntParserRuleCall_4_0 = (RuleCall)cSecondAssignment_4.eContents().get(0);
		private final Keyword cSKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Time timers::Time:
		//	hour=EInt 'h' minute=EInt 'm' second=EInt 's';
		@Override public ParserRule getRule() { return rule; }
		
		//hour=EInt 'h' minute=EInt 'm' second=EInt 's'
		public Group getGroup() { return cGroup; }
		
		//hour=EInt
		public Assignment getHourAssignment_0() { return cHourAssignment_0; }
		
		//EInt
		public RuleCall getHourEIntParserRuleCall_0_0() { return cHourEIntParserRuleCall_0_0; }
		
		//'h'
		public Keyword getHKeyword_1() { return cHKeyword_1; }
		
		//minute=EInt
		public Assignment getMinuteAssignment_2() { return cMinuteAssignment_2; }
		
		//EInt
		public RuleCall getMinuteEIntParserRuleCall_2_0() { return cMinuteEIntParserRuleCall_2_0; }
		
		//'m'
		public Keyword getMKeyword_3() { return cMKeyword_3; }
		
		//second=EInt
		public Assignment getSecondAssignment_4() { return cSecondAssignment_4; }
		
		//EInt
		public RuleCall getSecondEIntParserRuleCall_4_0() { return cSecondEIntParserRuleCall_4_0; }
		
		//'s'
		public Keyword getSKeyword_5() { return cSKeyword_5; }
	}
	public class TimeUnitValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.TimeUnitValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cValueEIntParserRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Assignment cUnitAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cUnitTimeUnitTypeEnumRuleCall_1_0 = (RuleCall)cUnitAssignment_1.eContents().get(0);
		
		//TimeUnitValue timers::TimeUnitValue:
		//	value=EInt
		//	unit=TimeUnitType;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EInt unit=TimeUnitType
		public Group getGroup() { return cGroup; }
		
		//value=EInt
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }
		
		//EInt
		public RuleCall getValueEIntParserRuleCall_0_0() { return cValueEIntParserRuleCall_0_0; }
		
		//unit=TimeUnitType
		public Assignment getUnitAssignment_1() { return cUnitAssignment_1; }
		
		//TimeUnitType
		public RuleCall getUnitTimeUnitTypeEnumRuleCall_1_0() { return cUnitTimeUnitTypeEnumRuleCall_1_0; }
	}
	public class FilePathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.FilePath");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFile_pathKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cWith_pathKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFilePathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFilePathEStringParserRuleCall_3_0 = (RuleCall)cFilePathAssignment_3.eContents().get(0);
		
		//FilePath operatingsystemactuators::FilePath:
		//	'file_path'
		//	name=EString
		//	'with_path'
		//	filePath=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//'file_path' name=EString 'with_path' filePath=EString
		public Group getGroup() { return cGroup; }
		
		//'file_path'
		public Keyword getFile_pathKeyword_0() { return cFile_pathKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'with_path'
		public Keyword getWith_pathKeyword_2() { return cWith_pathKeyword_2; }
		
		//filePath=EString
		public Assignment getFilePathAssignment_3() { return cFilePathAssignment_3; }
		
		//EString
		public RuleCall getFilePathEStringParserRuleCall_3_0() { return cFilePathEStringParserRuleCall_3_0; }
	}
	public class RemoteEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.RemoteEvent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRemote_eventKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdentifierAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cIdentifierRemoteEventIdentifierCrossReference_1_0 = (CrossReference)cIdentifierAssignment_1.eContents().get(0);
		private final RuleCall cIdentifierRemoteEventIdentifierEStringParserRuleCall_1_0_1 = (RuleCall)cIdentifierRemoteEventIdentifierCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cActuatorsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cActuatorsActuatorParserRuleCall_3_0 = (RuleCall)cActuatorsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cActuatorsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_4_1_0 = (RuleCall)cActuatorsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//RemoteEvent communicationsprograms::RemoteEvent:
		//	'remote_event'
		//	identifier=[communicationsprograms::RemoteEventIdentifier|EString]
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'remote_event' identifier=[communicationsprograms::RemoteEventIdentifier|EString] '{' actuators+=Actuator (","
		//actuators+=Actuator)* '}'
		public Group getGroup() { return cGroup; }
		
		//'remote_event'
		public Keyword getRemote_eventKeyword_0() { return cRemote_eventKeyword_0; }
		
		//identifier=[communicationsprograms::RemoteEventIdentifier|EString]
		public Assignment getIdentifierAssignment_1() { return cIdentifierAssignment_1; }
		
		//[communicationsprograms::RemoteEventIdentifier|EString]
		public CrossReference getIdentifierRemoteEventIdentifierCrossReference_1_0() { return cIdentifierRemoteEventIdentifierCrossReference_1_0; }
		
		//EString
		public RuleCall getIdentifierRemoteEventIdentifierEStringParserRuleCall_1_0_1() { return cIdentifierRemoteEventIdentifierEStringParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_3() { return cActuatorsAssignment_3; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_3_0() { return cActuatorsActuatorParserRuleCall_3_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_4_1() { return cActuatorsAssignment_4_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_4_1_0() { return cActuatorsActuatorParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class RemoteActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.RemoteActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRemote_actuatorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdentifierAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cIdentifierRemoteActuatorIdentifierCrossReference_1_0 = (CrossReference)cIdentifierAssignment_1.eContents().get(0);
		private final RuleCall cIdentifierRemoteActuatorIdentifierEStringParserRuleCall_1_0_1 = (RuleCall)cIdentifierRemoteActuatorIdentifierCrossReference_1_0.eContents().get(1);
		
		//RemoteActuator communicationsprograms::RemoteActuator:
		//	'remote_actuator'
		//	identifier=[communicationsprograms::RemoteActuatorIdentifier|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//'remote_actuator' identifier=[communicationsprograms::RemoteActuatorIdentifier|EString]
		public Group getGroup() { return cGroup; }
		
		//'remote_actuator'
		public Keyword getRemote_actuatorKeyword_0() { return cRemote_actuatorKeyword_0; }
		
		//identifier=[communicationsprograms::RemoteActuatorIdentifier|EString]
		public Assignment getIdentifierAssignment_1() { return cIdentifierAssignment_1; }
		
		//[communicationsprograms::RemoteActuatorIdentifier|EString]
		public CrossReference getIdentifierRemoteActuatorIdentifierCrossReference_1_0() { return cIdentifierRemoteActuatorIdentifierCrossReference_1_0; }
		
		//EString
		public RuleCall getIdentifierRemoteActuatorIdentifierEStringParserRuleCall_1_0_1() { return cIdentifierRemoteActuatorIdentifierEStringParserRuleCall_1_0_1; }
	}
	public class SystemCommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.SystemCommand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSystem_commandKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFilePathAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFilePathFilePathCrossReference_1_0 = (CrossReference)cFilePathAssignment_1.eContents().get(0);
		private final RuleCall cFilePathFilePathEStringParserRuleCall_1_0_1 = (RuleCall)cFilePathFilePathCrossReference_1_0.eContents().get(1);
		
		//SystemCommand operatingsystemactuators::SystemCommand:
		//	'system_command'
		//	filePath=[operatingsystemactuators::FilePath|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//'system_command' filePath=[operatingsystemactuators::FilePath|EString]
		public Group getGroup() { return cGroup; }
		
		//'system_command'
		public Keyword getSystem_commandKeyword_0() { return cSystem_commandKeyword_0; }
		
		//filePath=[operatingsystemactuators::FilePath|EString]
		public Assignment getFilePathAssignment_1() { return cFilePathAssignment_1; }
		
		//[operatingsystemactuators::FilePath|EString]
		public CrossReference getFilePathFilePathCrossReference_1_0() { return cFilePathFilePathCrossReference_1_0; }
		
		//EString
		public RuleCall getFilePathFilePathEStringParserRuleCall_1_0_1() { return cFilePathFilePathEStringParserRuleCall_1_0_1; }
	}
	public class DownloadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Download");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDownloadKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cUrlAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cUrlEStringParserRuleCall_1_0 = (RuleCall)cUrlAssignment_1.eContents().get(0);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFilePathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cFilePathFilePathCrossReference_3_0 = (CrossReference)cFilePathAssignment_3.eContents().get(0);
		private final RuleCall cFilePathFilePathEStringParserRuleCall_3_0_1 = (RuleCall)cFilePathFilePathCrossReference_3_0.eContents().get(1);
		
		//Download operatingsystemactuators::Download:
		//	'download'
		//	url=EString
		//	'to'
		//	filePath=[operatingsystemactuators::FilePath|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//'download' url=EString 'to' filePath=[operatingsystemactuators::FilePath|EString]
		public Group getGroup() { return cGroup; }
		
		//'download'
		public Keyword getDownloadKeyword_0() { return cDownloadKeyword_0; }
		
		//url=EString
		public Assignment getUrlAssignment_1() { return cUrlAssignment_1; }
		
		//EString
		public RuleCall getUrlEStringParserRuleCall_1_0() { return cUrlEStringParserRuleCall_1_0; }
		
		//'to'
		public Keyword getToKeyword_2() { return cToKeyword_2; }
		
		//filePath=[operatingsystemactuators::FilePath|EString]
		public Assignment getFilePathAssignment_3() { return cFilePathAssignment_3; }
		
		//[operatingsystemactuators::FilePath|EString]
		public CrossReference getFilePathFilePathCrossReference_3_0() { return cFilePathFilePathCrossReference_3_0; }
		
		//EString
		public RuleCall getFilePathFilePathEStringParserRuleCall_3_0_1() { return cFilePathFilePathEStringParserRuleCall_3_0_1; }
	}
	public class PlaySoundElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.PlaySound");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlay_soundKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cWith_volumeKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cVolumeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cVolumeEIntParserRuleCall_1_1_0 = (RuleCall)cVolumeAssignment_1_1.eContents().get(0);
		private final Assignment cFilePathAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cFilePathFilePathCrossReference_2_0 = (CrossReference)cFilePathAssignment_2.eContents().get(0);
		private final RuleCall cFilePathFilePathEStringParserRuleCall_2_0_1 = (RuleCall)cFilePathFilePathCrossReference_2_0.eContents().get(1);
		
		//PlaySound operatingsystemactuators::PlaySound:
		//	'play_sound' ('with_volume' volume=EInt)?
		//	filePath=[operatingsystemactuators::FilePath|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//'play_sound' ('with_volume' volume=EInt)? filePath=[operatingsystemactuators::FilePath|EString]
		public Group getGroup() { return cGroup; }
		
		//'play_sound'
		public Keyword getPlay_soundKeyword_0() { return cPlay_soundKeyword_0; }
		
		//('with_volume' volume=EInt)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'with_volume'
		public Keyword getWith_volumeKeyword_1_0() { return cWith_volumeKeyword_1_0; }
		
		//volume=EInt
		public Assignment getVolumeAssignment_1_1() { return cVolumeAssignment_1_1; }
		
		//EInt
		public RuleCall getVolumeEIntParserRuleCall_1_1_0() { return cVolumeEIntParserRuleCall_1_1_0; }
		
		//filePath=[operatingsystemactuators::FilePath|EString]
		public Assignment getFilePathAssignment_2() { return cFilePathAssignment_2; }
		
		//[operatingsystemactuators::FilePath|EString]
		public CrossReference getFilePathFilePathCrossReference_2_0() { return cFilePathFilePathCrossReference_2_0; }
		
		//EString
		public RuleCall getFilePathFilePathEStringParserRuleCall_2_0_1() { return cFilePathFilePathEStringParserRuleCall_2_0_1; }
	}
	public class BackgroundImageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.BackgroundImage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBackground_imageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFilePathAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFilePathFilePathCrossReference_1_0 = (CrossReference)cFilePathAssignment_1.eContents().get(0);
		private final RuleCall cFilePathFilePathEStringParserRuleCall_1_0_1 = (RuleCall)cFilePathFilePathCrossReference_1_0.eContents().get(1);
		private final Assignment cResizeTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cResizeTypeResizeTypeEnumRuleCall_2_0 = (RuleCall)cResizeTypeAssignment_2.eContents().get(0);
		
		//BackgroundImage operatingsystemactuators::BackgroundImage:
		//	'background_image'
		//	filePath=[operatingsystemactuators::FilePath|EString] resizeType=ResizeType;
		@Override public ParserRule getRule() { return rule; }
		
		//'background_image' filePath=[operatingsystemactuators::FilePath|EString] resizeType=ResizeType
		public Group getGroup() { return cGroup; }
		
		//'background_image'
		public Keyword getBackground_imageKeyword_0() { return cBackground_imageKeyword_0; }
		
		//filePath=[operatingsystemactuators::FilePath|EString]
		public Assignment getFilePathAssignment_1() { return cFilePathAssignment_1; }
		
		//[operatingsystemactuators::FilePath|EString]
		public CrossReference getFilePathFilePathCrossReference_1_0() { return cFilePathFilePathCrossReference_1_0; }
		
		//EString
		public RuleCall getFilePathFilePathEStringParserRuleCall_1_0_1() { return cFilePathFilePathEStringParserRuleCall_1_0_1; }
		
		//resizeType=ResizeType
		public Assignment getResizeTypeAssignment_2() { return cResizeTypeAssignment_2; }
		
		//ResizeType
		public RuleCall getResizeTypeResizeTypeEnumRuleCall_2_0() { return cResizeTypeResizeTypeEnumRuleCall_2_0; }
	}
	public class DrawImageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.DrawImage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDraw_imageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFilePathAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFilePathFilePathCrossReference_1_0 = (CrossReference)cFilePathAssignment_1.eContents().get(0);
		private final RuleCall cFilePathFilePathEStringParserRuleCall_1_0_1 = (RuleCall)cFilePathFilePathCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cXKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPositionXAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPositionXEIntParserRuleCall_4_0 = (RuleCall)cPositionXAssignment_4.eContents().get(0);
		private final Keyword cYKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPositionYAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPositionYEIntParserRuleCall_6_0 = (RuleCall)cPositionYAssignment_6.eContents().get(0);
		private final Keyword cZKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cPositionZAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cPositionZEIntParserRuleCall_8_0 = (RuleCall)cPositionZAssignment_8.eContents().get(0);
		private final Keyword cColorKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cColorAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cColorELongParserRuleCall_10_0 = (RuleCall)cColorAssignment_10.eContents().get(0);
		private final Keyword cResizeKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cResizeTypeAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cResizeTypeResizeTypeEnumRuleCall_12_0 = (RuleCall)cResizeTypeAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//DrawImage operatingsystemactuators::DrawImage:
		//	'draw_image'
		//	filePath=[operatingsystemactuators::FilePath|EString]
		//	'{'
		//	'x' positionX=EInt
		//	'y' positionY=EInt
		//	'z' positionZ=EInt
		//	'color' color=ELong
		//	'resize' resizeType=ResizeType
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'draw_image' filePath=[operatingsystemactuators::FilePath|EString] '{' 'x' positionX=EInt 'y' positionY=EInt 'z'
		//positionZ=EInt 'color' color=ELong 'resize' resizeType=ResizeType '}'
		public Group getGroup() { return cGroup; }
		
		//'draw_image'
		public Keyword getDraw_imageKeyword_0() { return cDraw_imageKeyword_0; }
		
		//filePath=[operatingsystemactuators::FilePath|EString]
		public Assignment getFilePathAssignment_1() { return cFilePathAssignment_1; }
		
		//[operatingsystemactuators::FilePath|EString]
		public CrossReference getFilePathFilePathCrossReference_1_0() { return cFilePathFilePathCrossReference_1_0; }
		
		//EString
		public RuleCall getFilePathFilePathEStringParserRuleCall_1_0_1() { return cFilePathFilePathEStringParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'x'
		public Keyword getXKeyword_3() { return cXKeyword_3; }
		
		//positionX=EInt
		public Assignment getPositionXAssignment_4() { return cPositionXAssignment_4; }
		
		//EInt
		public RuleCall getPositionXEIntParserRuleCall_4_0() { return cPositionXEIntParserRuleCall_4_0; }
		
		//'y'
		public Keyword getYKeyword_5() { return cYKeyword_5; }
		
		//positionY=EInt
		public Assignment getPositionYAssignment_6() { return cPositionYAssignment_6; }
		
		//EInt
		public RuleCall getPositionYEIntParserRuleCall_6_0() { return cPositionYEIntParserRuleCall_6_0; }
		
		//'z'
		public Keyword getZKeyword_7() { return cZKeyword_7; }
		
		//positionZ=EInt
		public Assignment getPositionZAssignment_8() { return cPositionZAssignment_8; }
		
		//EInt
		public RuleCall getPositionZEIntParserRuleCall_8_0() { return cPositionZEIntParserRuleCall_8_0; }
		
		//'color'
		public Keyword getColorKeyword_9() { return cColorKeyword_9; }
		
		//color=ELong
		public Assignment getColorAssignment_10() { return cColorAssignment_10; }
		
		//ELong
		public RuleCall getColorELongParserRuleCall_10_0() { return cColorELongParserRuleCall_10_0; }
		
		//'resize'
		public Keyword getResizeKeyword_11() { return cResizeKeyword_11; }
		
		//resizeType=ResizeType
		public Assignment getResizeTypeAssignment_12() { return cResizeTypeAssignment_12; }
		
		//ResizeType
		public RuleCall getResizeTypeResizeTypeEnumRuleCall_12_0() { return cResizeTypeResizeTypeEnumRuleCall_12_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class PlayVideoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.PlayVideo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlay_videoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFilePathAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFilePathFilePathCrossReference_1_0 = (CrossReference)cFilePathAssignment_1.eContents().get(0);
		private final RuleCall cFilePathFilePathEStringParserRuleCall_1_0_1 = (RuleCall)cFilePathFilePathCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cXKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPositionXAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPositionXEIntParserRuleCall_4_0 = (RuleCall)cPositionXAssignment_4.eContents().get(0);
		private final Keyword cYKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPositionYAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPositionYEIntParserRuleCall_6_0 = (RuleCall)cPositionYAssignment_6.eContents().get(0);
		private final Keyword cZKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cPositionZAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cPositionZEIntParserRuleCall_8_0 = (RuleCall)cPositionZAssignment_8.eContents().get(0);
		private final Keyword cColorKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cColorAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cColorELongParserRuleCall_10_0 = (RuleCall)cColorAssignment_10.eContents().get(0);
		private final Keyword cResizeKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cResizeTypeAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cResizeTypeResizeTypeEnumRuleCall_12_0 = (RuleCall)cResizeTypeAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//PlayVideo operatingsystemactuators::PlayVideo:
		//	'play_video'
		//	filePath=[operatingsystemactuators::FilePath|EString]
		//	'{'
		//	'x' positionX=EInt
		//	'y' positionY=EInt
		//	'z' positionZ=EInt
		//	'color' color=ELong
		//	'resize' resizeType=ResizeType
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'play_video' filePath=[operatingsystemactuators::FilePath|EString] '{' 'x' positionX=EInt 'y' positionY=EInt 'z'
		//positionZ=EInt 'color' color=ELong 'resize' resizeType=ResizeType '}'
		public Group getGroup() { return cGroup; }
		
		//'play_video'
		public Keyword getPlay_videoKeyword_0() { return cPlay_videoKeyword_0; }
		
		//filePath=[operatingsystemactuators::FilePath|EString]
		public Assignment getFilePathAssignment_1() { return cFilePathAssignment_1; }
		
		//[operatingsystemactuators::FilePath|EString]
		public CrossReference getFilePathFilePathCrossReference_1_0() { return cFilePathFilePathCrossReference_1_0; }
		
		//EString
		public RuleCall getFilePathFilePathEStringParserRuleCall_1_0_1() { return cFilePathFilePathEStringParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'x'
		public Keyword getXKeyword_3() { return cXKeyword_3; }
		
		//positionX=EInt
		public Assignment getPositionXAssignment_4() { return cPositionXAssignment_4; }
		
		//EInt
		public RuleCall getPositionXEIntParserRuleCall_4_0() { return cPositionXEIntParserRuleCall_4_0; }
		
		//'y'
		public Keyword getYKeyword_5() { return cYKeyword_5; }
		
		//positionY=EInt
		public Assignment getPositionYAssignment_6() { return cPositionYAssignment_6; }
		
		//EInt
		public RuleCall getPositionYEIntParserRuleCall_6_0() { return cPositionYEIntParserRuleCall_6_0; }
		
		//'z'
		public Keyword getZKeyword_7() { return cZKeyword_7; }
		
		//positionZ=EInt
		public Assignment getPositionZAssignment_8() { return cPositionZAssignment_8; }
		
		//EInt
		public RuleCall getPositionZEIntParserRuleCall_8_0() { return cPositionZEIntParserRuleCall_8_0; }
		
		//'color'
		public Keyword getColorKeyword_9() { return cColorKeyword_9; }
		
		//color=ELong
		public Assignment getColorAssignment_10() { return cColorAssignment_10; }
		
		//ELong
		public RuleCall getColorELongParserRuleCall_10_0() { return cColorELongParserRuleCall_10_0; }
		
		//'resize'
		public Keyword getResizeKeyword_11() { return cResizeKeyword_11; }
		
		//resizeType=ResizeType
		public Assignment getResizeTypeAssignment_12() { return cResizeTypeAssignment_12; }
		
		//ResizeType
		public RuleCall getResizeTypeResizeTypeEnumRuleCall_12_0() { return cResizeTypeResizeTypeEnumRuleCall_12_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class ChangeStateActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.ChangeStateActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChange_stateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cStateAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cStateProgramStateCrossReference_1_0 = (CrossReference)cStateAssignment_1.eContents().get(0);
		private final RuleCall cStateProgramStateEStringParserRuleCall_1_0_1 = (RuleCall)cStateProgramStateCrossReference_1_0.eContents().get(1);
		
		//ChangeStateActuator programs::ChangeStateActuator:
		//	'change_state'
		//	state=[programs::ProgramState|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//'change_state' state=[programs::ProgramState|EString]
		public Group getGroup() { return cGroup; }
		
		//'change_state'
		public Keyword getChange_stateKeyword_0() { return cChange_stateKeyword_0; }
		
		//state=[programs::ProgramState|EString]
		public Assignment getStateAssignment_1() { return cStateAssignment_1; }
		
		//[programs::ProgramState|EString]
		public CrossReference getStateProgramStateCrossReference_1_0() { return cStateProgramStateCrossReference_1_0; }
		
		//EString
		public RuleCall getStateProgramStateEStringParserRuleCall_1_0_1() { return cStateProgramStateEStringParserRuleCall_1_0_1; }
	}
	public class DigitalInputPinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.DigitalInputPin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGpio_input_digitalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cConnected_to_pinKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNumberAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNumberEIntParserRuleCall_3_0 = (RuleCall)cNumberAssignment_3.eContents().get(0);
		
		//DigitalInputPin gpios::DigitalInputPin:
		//	'gpio_input_digital'
		//	name=EString
		//	'connected_to_pin'
		//	number=EInt;
		@Override public ParserRule getRule() { return rule; }
		
		//'gpio_input_digital' name=EString 'connected_to_pin' number=EInt
		public Group getGroup() { return cGroup; }
		
		//'gpio_input_digital'
		public Keyword getGpio_input_digitalKeyword_0() { return cGpio_input_digitalKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'connected_to_pin'
		public Keyword getConnected_to_pinKeyword_2() { return cConnected_to_pinKeyword_2; }
		
		//number=EInt
		public Assignment getNumberAssignment_3() { return cNumberAssignment_3; }
		
		//EInt
		public RuleCall getNumberEIntParserRuleCall_3_0() { return cNumberEIntParserRuleCall_3_0; }
	}
	public class DigitalOutputPinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.DigitalOutputPin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGpio_output_digitalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cConnected_to_pinKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNumberAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNumberEIntParserRuleCall_3_0 = (RuleCall)cNumberAssignment_3.eContents().get(0);
		
		//DigitalOutputPin gpios::DigitalOutputPin:
		//	'gpio_output_digital'
		//	name=EString
		//	'connected_to_pin'
		//	number=EInt;
		@Override public ParserRule getRule() { return rule; }
		
		//'gpio_output_digital' name=EString 'connected_to_pin' number=EInt
		public Group getGroup() { return cGroup; }
		
		//'gpio_output_digital'
		public Keyword getGpio_output_digitalKeyword_0() { return cGpio_output_digitalKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'connected_to_pin'
		public Keyword getConnected_to_pinKeyword_2() { return cConnected_to_pinKeyword_2; }
		
		//number=EInt
		public Assignment getNumberAssignment_3() { return cNumberAssignment_3; }
		
		//EInt
		public RuleCall getNumberEIntParserRuleCall_3_0() { return cNumberEIntParserRuleCall_3_0; }
	}
	public class AnalogInputPinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.AnalogInputPin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGpio_input_analogKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cConnected_to_pinKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNumberAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNumberEIntParserRuleCall_3_0 = (RuleCall)cNumberAssignment_3.eContents().get(0);
		
		//AnalogInputPin gpios::AnalogInputPin:
		//	'gpio_input_analog'
		//	name=EString
		//	'connected_to_pin'
		//	number=EInt;
		@Override public ParserRule getRule() { return rule; }
		
		//'gpio_input_analog' name=EString 'connected_to_pin' number=EInt
		public Group getGroup() { return cGroup; }
		
		//'gpio_input_analog'
		public Keyword getGpio_input_analogKeyword_0() { return cGpio_input_analogKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'connected_to_pin'
		public Keyword getConnected_to_pinKeyword_2() { return cConnected_to_pinKeyword_2; }
		
		//number=EInt
		public Assignment getNumberAssignment_3() { return cNumberAssignment_3; }
		
		//EInt
		public RuleCall getNumberEIntParserRuleCall_3_0() { return cNumberEIntParserRuleCall_3_0; }
	}
	public class AnalogOutputPinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.AnalogOutputPin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGpio_output_analogKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cConnected_to_pinKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNumberAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNumberEIntParserRuleCall_3_0 = (RuleCall)cNumberAssignment_3.eContents().get(0);
		
		//AnalogOutputPin gpios::AnalogOutputPin:
		//	'gpio_output_analog'
		//	name=EString
		//	'connected_to_pin'
		//	number=EInt;
		@Override public ParserRule getRule() { return rule; }
		
		//'gpio_output_analog' name=EString 'connected_to_pin' number=EInt
		public Group getGroup() { return cGroup; }
		
		//'gpio_output_analog'
		public Keyword getGpio_output_analogKeyword_0() { return cGpio_output_analogKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'connected_to_pin'
		public Keyword getConnected_to_pinKeyword_2() { return cConnected_to_pinKeyword_2; }
		
		//number=EInt
		public Assignment getNumberAssignment_3() { return cNumberAssignment_3; }
		
		//EInt
		public RuleCall getNumberEIntParserRuleCall_3_0() { return cNumberEIntParserRuleCall_3_0; }
	}
	public class RemoteEventIdentifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.RemoteEventIdentifier");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRemote_event_identifierKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//RemoteEventIdentifier communicationsprograms::RemoteEventIdentifier:
		//	'remote_event_identifier'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//'remote_event_identifier' name=EString
		public Group getGroup() { return cGroup; }
		
		//'remote_event_identifier'
		public Keyword getRemote_event_identifierKeyword_0() { return cRemote_event_identifierKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}
	public class RemoteActuatorIdentifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.RemoteActuatorIdentifier");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRemote_actuator_identifierKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//RemoteActuatorIdentifier communicationsprograms::RemoteActuatorIdentifier:
		//	'remote_actuator_identifier'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//'remote_actuator_identifier' name=EString
		public Group getGroup() { return cGroup; }
		
		//'remote_actuator_identifier'
		public Keyword getRemote_actuator_identifierKeyword_0() { return cRemote_actuator_identifierKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}
	public class SequentialActuatorsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.SequentialActuators");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSequentialKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActuatorsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActuatorsActuatorParserRuleCall_2_0 = (RuleCall)cActuatorsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cActuatorsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_3_1_0 = (RuleCall)cActuatorsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SequentialActuators events::SequentialActuators:
		//	'sequential'
		//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'sequential' '{' actuators+=Actuator ("," actuators+=Actuator)* '}'
		public Group getGroup() { return cGroup; }
		
		//'sequential'
		public Keyword getSequentialKeyword_0() { return cSequentialKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_2() { return cActuatorsAssignment_2; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_2_0() { return cActuatorsActuatorParserRuleCall_2_0; }
		
		//("," actuators+=Actuator)*
		public Group getGroup_3() { return cGroup_3; }
		
		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//actuators+=Actuator
		public Assignment getActuatorsAssignment_3_1() { return cActuatorsAssignment_3_1; }
		
		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_3_1_0() { return cActuatorsActuatorParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ChangeOutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.ChangeOutput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinDigitalOutputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinDigitalOutputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinDigitalOutputPinCrossReference_1_0.eContents().get(1);
		private final Assignment cStatusAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStatusDigitalPinStatusEnumRuleCall_2_0 = (RuleCall)cStatusAssignment_2.eContents().get(0);
		
		//ChangeOutput gpiosactuators::ChangeOutput:
		//	'change'
		//	pin=[gpios::DigitalOutputPin|EString] status=DigitalPinStatus;
		@Override public ParserRule getRule() { return rule; }
		
		//'change' pin=[gpios::DigitalOutputPin|EString] status=DigitalPinStatus
		public Group getGroup() { return cGroup; }
		
		//'change'
		public Keyword getChangeKeyword_0() { return cChangeKeyword_0; }
		
		//pin=[gpios::DigitalOutputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::DigitalOutputPin|EString]
		public CrossReference getPinDigitalOutputPinCrossReference_1_0() { return cPinDigitalOutputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinDigitalOutputPinEStringParserRuleCall_1_0_1() { return cPinDigitalOutputPinEStringParserRuleCall_1_0_1; }
		
		//status=DigitalPinStatus
		public Assignment getStatusAssignment_2() { return cStatusAssignment_2; }
		
		//DigitalPinStatus
		public RuleCall getStatusDigitalPinStatusEnumRuleCall_2_0() { return cStatusDigitalPinStatusEnumRuleCall_2_0; }
	}
	public class ButtonOutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.ButtonOutput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cButtonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinDigitalOutputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinDigitalOutputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinDigitalOutputPinCrossReference_1_0.eContents().get(1);
		private final Keyword cDurationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDurationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDurationTimeUnitValueParserRuleCall_3_0 = (RuleCall)cDurationAssignment_3.eContents().get(0);
		
		//ButtonOutput gpiosactuators::ButtonOutput:
		//	'button'
		//	pin=[gpios::DigitalOutputPin|EString]
		//	'duration' duration=TimeUnitValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'button' pin=[gpios::DigitalOutputPin|EString] 'duration' duration=TimeUnitValue
		public Group getGroup() { return cGroup; }
		
		//'button'
		public Keyword getButtonKeyword_0() { return cButtonKeyword_0; }
		
		//pin=[gpios::DigitalOutputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::DigitalOutputPin|EString]
		public CrossReference getPinDigitalOutputPinCrossReference_1_0() { return cPinDigitalOutputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinDigitalOutputPinEStringParserRuleCall_1_0_1() { return cPinDigitalOutputPinEStringParserRuleCall_1_0_1; }
		
		//'duration'
		public Keyword getDurationKeyword_2() { return cDurationKeyword_2; }
		
		//duration=TimeUnitValue
		public Assignment getDurationAssignment_3() { return cDurationAssignment_3; }
		
		//TimeUnitValue
		public RuleCall getDurationTimeUnitValueParserRuleCall_3_0() { return cDurationTimeUnitValueParserRuleCall_3_0; }
	}
	public class PulseOutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.PulseOutput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPulseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinDigitalOutputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinDigitalOutputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinDigitalOutputPinCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTimesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cCountAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCountEIntParserRuleCall_4_0 = (RuleCall)cCountAssignment_4.eContents().get(0);
		private final Keyword cWidthKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cWidthAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cWidthEIntParserRuleCall_6_0 = (RuleCall)cWidthAssignment_6.eContents().get(0);
		private final Keyword cMsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSpace_widthKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cSpaceWidthAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cSpaceWidthEIntParserRuleCall_9_0 = (RuleCall)cSpaceWidthAssignment_9.eContents().get(0);
		private final Keyword cMsKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//PulseOutput gpiosactuators::PulseOutput:
		//	'pulse'
		//	pin=[gpios::DigitalOutputPin|EString]
		//	'{'
		//	'times' count=EInt
		//	'width' width=EInt 'ms'
		//	'space_width' spaceWidth=EInt 'ms'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'pulse' pin=[gpios::DigitalOutputPin|EString] '{' 'times' count=EInt 'width' width=EInt 'ms' 'space_width'
		//spaceWidth=EInt 'ms' '}'
		public Group getGroup() { return cGroup; }
		
		//'pulse'
		public Keyword getPulseKeyword_0() { return cPulseKeyword_0; }
		
		//pin=[gpios::DigitalOutputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::DigitalOutputPin|EString]
		public CrossReference getPinDigitalOutputPinCrossReference_1_0() { return cPinDigitalOutputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinDigitalOutputPinEStringParserRuleCall_1_0_1() { return cPinDigitalOutputPinEStringParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'times'
		public Keyword getTimesKeyword_3() { return cTimesKeyword_3; }
		
		//count=EInt
		public Assignment getCountAssignment_4() { return cCountAssignment_4; }
		
		//EInt
		public RuleCall getCountEIntParserRuleCall_4_0() { return cCountEIntParserRuleCall_4_0; }
		
		//'width'
		public Keyword getWidthKeyword_5() { return cWidthKeyword_5; }
		
		//width=EInt
		public Assignment getWidthAssignment_6() { return cWidthAssignment_6; }
		
		//EInt
		public RuleCall getWidthEIntParserRuleCall_6_0() { return cWidthEIntParserRuleCall_6_0; }
		
		//'ms'
		public Keyword getMsKeyword_7() { return cMsKeyword_7; }
		
		//'space_width'
		public Keyword getSpace_widthKeyword_8() { return cSpace_widthKeyword_8; }
		
		//spaceWidth=EInt
		public Assignment getSpaceWidthAssignment_9() { return cSpaceWidthAssignment_9; }
		
		//EInt
		public RuleCall getSpaceWidthEIntParserRuleCall_9_0() { return cSpaceWidthEIntParserRuleCall_9_0; }
		
		//'ms'
		public Keyword getMsKeyword_10() { return cMsKeyword_10; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class BlinkOutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.BlinkOutput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBlinkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinDigitalOutputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinDigitalOutputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinDigitalOutputPinCrossReference_1_0.eContents().get(1);
		private final Keyword cIntervalKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIntervalAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIntervalTimeUnitValueParserRuleCall_3_0 = (RuleCall)cIntervalAssignment_3.eContents().get(0);
		
		//BlinkOutput gpiosactuators::BlinkOutput:
		//	'blink'
		//	pin=[gpios::DigitalOutputPin|EString]
		//	'interval' interval=TimeUnitValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'blink' pin=[gpios::DigitalOutputPin|EString] 'interval' interval=TimeUnitValue
		public Group getGroup() { return cGroup; }
		
		//'blink'
		public Keyword getBlinkKeyword_0() { return cBlinkKeyword_0; }
		
		//pin=[gpios::DigitalOutputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::DigitalOutputPin|EString]
		public CrossReference getPinDigitalOutputPinCrossReference_1_0() { return cPinDigitalOutputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinDigitalOutputPinEStringParserRuleCall_1_0_1() { return cPinDigitalOutputPinEStringParserRuleCall_1_0_1; }
		
		//'interval'
		public Keyword getIntervalKeyword_2() { return cIntervalKeyword_2; }
		
		//interval=TimeUnitValue
		public Assignment getIntervalAssignment_3() { return cIntervalAssignment_3; }
		
		//TimeUnitValue
		public RuleCall getIntervalTimeUnitValueParserRuleCall_3_0() { return cIntervalTimeUnitValueParserRuleCall_3_0; }
	}
	public class BlinkTimerOutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.BlinkTimerOutput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBlink_timerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinDigitalOutputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinDigitalOutputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinDigitalOutputPinCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDuringKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDurationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDurationTimeUnitValueParserRuleCall_4_0 = (RuleCall)cDurationAssignment_4.eContents().get(0);
		private final Keyword cIntervalKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cIntervalAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cIntervalTimeUnitValueParserRuleCall_6_0 = (RuleCall)cIntervalAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//BlinkTimerOutput gpiosactuators::BlinkTimerOutput:
		//	'blink_timer'
		//	pin=[gpios::DigitalOutputPin|EString]
		//	'{'
		//	'during' duration=TimeUnitValue
		//	'interval' interval=TimeUnitValue
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'blink_timer' pin=[gpios::DigitalOutputPin|EString] '{' 'during' duration=TimeUnitValue 'interval'
		//interval=TimeUnitValue '}'
		public Group getGroup() { return cGroup; }
		
		//'blink_timer'
		public Keyword getBlink_timerKeyword_0() { return cBlink_timerKeyword_0; }
		
		//pin=[gpios::DigitalOutputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::DigitalOutputPin|EString]
		public CrossReference getPinDigitalOutputPinCrossReference_1_0() { return cPinDigitalOutputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinDigitalOutputPinEStringParserRuleCall_1_0_1() { return cPinDigitalOutputPinEStringParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'during'
		public Keyword getDuringKeyword_3() { return cDuringKeyword_3; }
		
		//duration=TimeUnitValue
		public Assignment getDurationAssignment_4() { return cDurationAssignment_4; }
		
		//TimeUnitValue
		public RuleCall getDurationTimeUnitValueParserRuleCall_4_0() { return cDurationTimeUnitValueParserRuleCall_4_0; }
		
		//'interval'
		public Keyword getIntervalKeyword_5() { return cIntervalKeyword_5; }
		
		//interval=TimeUnitValue
		public Assignment getIntervalAssignment_6() { return cIntervalAssignment_6; }
		
		//TimeUnitValue
		public RuleCall getIntervalTimeUnitValueParserRuleCall_6_0() { return cIntervalTimeUnitValueParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class PwmElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Pwm");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPwmKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinAnalogOutputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinAnalogOutputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinAnalogOutputPinCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cValueKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueEIntParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Pwm gpiosactuators::Pwm:
		//	'pwm'
		//	pin=[gpios::AnalogOutputPin|EString]
		//	'{'
		//	'value' value=EInt
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'pwm' pin=[gpios::AnalogOutputPin|EString] '{' 'value' value=EInt '}'
		public Group getGroup() { return cGroup; }
		
		//'pwm'
		public Keyword getPwmKeyword_0() { return cPwmKeyword_0; }
		
		//pin=[gpios::AnalogOutputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::AnalogOutputPin|EString]
		public CrossReference getPinAnalogOutputPinCrossReference_1_0() { return cPinAnalogOutputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinAnalogOutputPinEStringParserRuleCall_1_0_1() { return cPinAnalogOutputPinEStringParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'value'
		public Keyword getValueKeyword_3() { return cValueKeyword_3; }
		
		//value=EInt
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }
		
		//EInt
		public RuleCall getValueEIntParserRuleCall_4_0() { return cValueEIntParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class TransformToElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.TransformTo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPwm_transformKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPinAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPinAnalogOutputPinCrossReference_1_0 = (CrossReference)cPinAssignment_1.eContents().get(0);
		private final RuleCall cPinAnalogOutputPinEStringParserRuleCall_1_0_1 = (RuleCall)cPinAnalogOutputPinCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cValueKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueEIntParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Keyword cDurationKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDurationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDurationTimeUnitValueParserRuleCall_6_0 = (RuleCall)cDurationAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//TransformTo gpiosactuators::TransformTo:
		//	'pwm_transform'
		//	pin=[gpios::AnalogOutputPin|EString]
		//	'{'
		//	'value' value=EInt
		//	'duration' duration=TimeUnitValue
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'pwm_transform' pin=[gpios::AnalogOutputPin|EString] '{' 'value' value=EInt 'duration' duration=TimeUnitValue '}'
		public Group getGroup() { return cGroup; }
		
		//'pwm_transform'
		public Keyword getPwm_transformKeyword_0() { return cPwm_transformKeyword_0; }
		
		//pin=[gpios::AnalogOutputPin|EString]
		public Assignment getPinAssignment_1() { return cPinAssignment_1; }
		
		//[gpios::AnalogOutputPin|EString]
		public CrossReference getPinAnalogOutputPinCrossReference_1_0() { return cPinAnalogOutputPinCrossReference_1_0; }
		
		//EString
		public RuleCall getPinAnalogOutputPinEStringParserRuleCall_1_0_1() { return cPinAnalogOutputPinEStringParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'value'
		public Keyword getValueKeyword_3() { return cValueKeyword_3; }
		
		//value=EInt
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }
		
		//EInt
		public RuleCall getValueEIntParserRuleCall_4_0() { return cValueEIntParserRuleCall_4_0; }
		
		//'duration'
		public Keyword getDurationKeyword_5() { return cDurationKeyword_5; }
		
		//duration=TimeUnitValue
		public Assignment getDurationAssignment_6() { return cDurationAssignment_6; }
		
		//TimeUnitValue
		public RuleCall getDurationTimeUnitValueParserRuleCall_6_0() { return cDurationTimeUnitValueParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class WifiConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.WifiConfiguration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSsidKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSsidAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSsidEStringParserRuleCall_1_0 = (RuleCall)cSsidAssignment_1.eContents().get(0);
		private final Keyword cWith_passwordKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPasswordAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPasswordEStringParserRuleCall_3_0 = (RuleCall)cPasswordAssignment_3.eContents().get(0);
		
		//WifiConfiguration deploymentdevices::WifiConfiguration:
		//	'ssid'
		//	ssid=EString
		//	'with_password'
		//	password=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//'ssid' ssid=EString 'with_password' password=EString
		public Group getGroup() { return cGroup; }
		
		//'ssid'
		public Keyword getSsidKeyword_0() { return cSsidKeyword_0; }
		
		//ssid=EString
		public Assignment getSsidAssignment_1() { return cSsidAssignment_1; }
		
		//EString
		public RuleCall getSsidEStringParserRuleCall_1_0() { return cSsidEStringParserRuleCall_1_0; }
		
		//'with_password'
		public Keyword getWith_passwordKeyword_2() { return cWith_passwordKeyword_2; }
		
		//password=EString
		public Assignment getPasswordAssignment_3() { return cPasswordAssignment_3; }
		
		//EString
		public RuleCall getPasswordEStringParserRuleCall_3_0() { return cPasswordEStringParserRuleCall_3_0; }
	}
	public class SimulatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Simulator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSimulatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSimulatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Simulator deploymentdevices::Simulator:
		//	{deploymentdevices::Simulator}
		//	'simulator';
		@Override public ParserRule getRule() { return rule; }
		
		//{deploymentdevices::Simulator} 'simulator'
		public Group getGroup() { return cGroup; }
		
		//{deploymentdevices::Simulator}
		public Action getSimulatorAction_0() { return cSimulatorAction_0; }
		
		//'simulator'
		public Keyword getSimulatorKeyword_1() { return cSimulatorKeyword_1; }
	}
	public class RaspberryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Raspberry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRaspberryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRaspberryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cWifiConfigurationAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cWifiConfigurationWifiConfigurationParserRuleCall_2_1_0 = (RuleCall)cWifiConfigurationAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//Raspberry deploymentdevices::Raspberry:
		//	{deploymentdevices::Raspberry}
		//	'raspberry' ('{' wifiConfiguration=WifiConfiguration '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{deploymentdevices::Raspberry} 'raspberry' ('{' wifiConfiguration=WifiConfiguration '}')?
		public Group getGroup() { return cGroup; }
		
		//{deploymentdevices::Raspberry}
		public Action getRaspberryAction_0() { return cRaspberryAction_0; }
		
		//'raspberry'
		public Keyword getRaspberryKeyword_1() { return cRaspberryKeyword_1; }
		
		//('{' wifiConfiguration=WifiConfiguration '}')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }
		
		//wifiConfiguration=WifiConfiguration
		public Assignment getWifiConfigurationAssignment_2_1() { return cWifiConfigurationAssignment_2_1; }
		
		//WifiConfiguration
		public RuleCall getWifiConfigurationWifiConfigurationParserRuleCall_2_1_0() { return cWifiConfigurationWifiConfigurationParserRuleCall_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_2() { return cRightCurlyBracketKeyword_2_2; }
	}
	public class BeagleboneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.Beaglebone");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBeagleboneAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBeagleboneKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cWifiConfigurationAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cWifiConfigurationWifiConfigurationParserRuleCall_2_1_0 = (RuleCall)cWifiConfigurationAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//Beaglebone deploymentdevices::Beaglebone:
		//	{deploymentdevices::Beaglebone}
		//	'beaglebone' ('{' wifiConfiguration=WifiConfiguration '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{deploymentdevices::Beaglebone} 'beaglebone' ('{' wifiConfiguration=WifiConfiguration '}')?
		public Group getGroup() { return cGroup; }
		
		//{deploymentdevices::Beaglebone}
		public Action getBeagleboneAction_0() { return cBeagleboneAction_0; }
		
		//'beaglebone'
		public Keyword getBeagleboneKeyword_1() { return cBeagleboneKeyword_1; }
		
		//('{' wifiConfiguration=WifiConfiguration '}')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }
		
		//wifiConfiguration=WifiConfiguration
		public Assignment getWifiConfigurationAssignment_2_1() { return cWifiConfigurationAssignment_2_1; }
		
		//WifiConfiguration
		public RuleCall getWifiConfigurationWifiConfigurationParserRuleCall_2_1_0() { return cWifiConfigurationWifiConfigurationParserRuleCall_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_2() { return cRightCurlyBracketKeyword_2_2; }
	}
	public class ESP8266Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.ESP8266");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cESP8266Action_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEsp8266Keyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cWifiConfigurationAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cWifiConfigurationWifiConfigurationParserRuleCall_2_1_0 = (RuleCall)cWifiConfigurationAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//ESP8266 deploymentdevices::ESP8266:
		//	{deploymentdevices::ESP8266}
		//	'esp8266' ('{' wifiConfiguration=WifiConfiguration '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{deploymentdevices::ESP8266} 'esp8266' ('{' wifiConfiguration=WifiConfiguration '}')?
		public Group getGroup() { return cGroup; }
		
		//{deploymentdevices::ESP8266}
		public Action getESP8266Action_0() { return cESP8266Action_0; }
		
		//'esp8266'
		public Keyword getEsp8266Keyword_1() { return cEsp8266Keyword_1; }
		
		//('{' wifiConfiguration=WifiConfiguration '}')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }
		
		//wifiConfiguration=WifiConfiguration
		public Assignment getWifiConfigurationAssignment_2_1() { return cWifiConfigurationAssignment_2_1; }
		
		//WifiConfiguration
		public RuleCall getWifiConfigurationWifiConfigurationParserRuleCall_2_1_0() { return cWifiConfigurationWifiConfigurationParserRuleCall_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_2() { return cRightCurlyBracketKeyword_2_2; }
	}
	public class JavaServerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.JavaServer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJava_serverKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNetwork_interface_addressKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNetworkInterfaceAddressAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNetworkInterfaceAddressEStringParserRuleCall_3_0 = (RuleCall)cNetworkInterfaceAddressAssignment_3.eContents().get(0);
		private final Keyword cNetwork_interface_portKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNetworkInterfacePortAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNetworkInterfacePortEIntParserRuleCall_5_0 = (RuleCall)cNetworkInterfacePortAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//JavaServer servers::JavaServer:
		//	'java_server'
		//	'{'
		//	'network_interface_address' networkInterfaceAddress=EString
		//	'network_interface_port' networkInterfacePort=EInt
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'java_server' '{' 'network_interface_address' networkInterfaceAddress=EString 'network_interface_port'
		//networkInterfacePort=EInt '}'
		public Group getGroup() { return cGroup; }
		
		//'java_server'
		public Keyword getJava_serverKeyword_0() { return cJava_serverKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'network_interface_address'
		public Keyword getNetwork_interface_addressKeyword_2() { return cNetwork_interface_addressKeyword_2; }
		
		//networkInterfaceAddress=EString
		public Assignment getNetworkInterfaceAddressAssignment_3() { return cNetworkInterfaceAddressAssignment_3; }
		
		//EString
		public RuleCall getNetworkInterfaceAddressEStringParserRuleCall_3_0() { return cNetworkInterfaceAddressEStringParserRuleCall_3_0; }
		
		//'network_interface_port'
		public Keyword getNetwork_interface_portKeyword_4() { return cNetwork_interface_portKeyword_4; }
		
		//networkInterfacePort=EInt
		public Assignment getNetworkInterfacePortAssignment_5() { return cNetworkInterfacePortAssignment_5; }
		
		//EInt
		public RuleCall getNetworkInterfacePortEIntParserRuleCall_5_0() { return cNetworkInterfacePortEIntParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	public class TimeUnitTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.TimeUnitType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMillisecondEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMillisecondMillisecondKeyword_0_0 = (Keyword)cMillisecondEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSecondEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSecondSecondKeyword_1_0 = (Keyword)cSecondEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMinuteEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMinuteMinuteKeyword_2_0 = (Keyword)cMinuteEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cHourEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cHourHourKeyword_3_0 = (Keyword)cHourEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum TimeUnitType returns timers::TimeUnitType:
		//	Millisecond | Second | Minute | Hour;
		public EnumRule getRule() { return rule; }
		
		//Millisecond | Second | Minute | Hour
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Millisecond
		public EnumLiteralDeclaration getMillisecondEnumLiteralDeclaration_0() { return cMillisecondEnumLiteralDeclaration_0; }
		
		//'Millisecond'
		public Keyword getMillisecondMillisecondKeyword_0_0() { return cMillisecondMillisecondKeyword_0_0; }
		
		//Second
		public EnumLiteralDeclaration getSecondEnumLiteralDeclaration_1() { return cSecondEnumLiteralDeclaration_1; }
		
		//'Second'
		public Keyword getSecondSecondKeyword_1_0() { return cSecondSecondKeyword_1_0; }
		
		//Minute
		public EnumLiteralDeclaration getMinuteEnumLiteralDeclaration_2() { return cMinuteEnumLiteralDeclaration_2; }
		
		//'Minute'
		public Keyword getMinuteMinuteKeyword_2_0() { return cMinuteMinuteKeyword_2_0; }
		
		//Hour
		public EnumLiteralDeclaration getHourEnumLiteralDeclaration_3() { return cHourEnumLiteralDeclaration_3; }
		
		//'Hour'
		public Keyword getHourHourKeyword_3_0() { return cHourHourKeyword_3_0; }
	}
	public class ResizeTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.ResizeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNoneEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNoneNoneKeyword_0_0 = (Keyword)cNoneEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAutoEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAutoAutoKeyword_1_0 = (Keyword)cAutoEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFillEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFillFillKeyword_2_0 = (Keyword)cFillEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum ResizeType returns operatingsystemactuators::ResizeType:
		//	None='none' | Auto='auto' | Fill='fill';
		public EnumRule getRule() { return rule; }
		
		//None='none' | Auto='auto' | Fill='fill'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//None='none'
		public EnumLiteralDeclaration getNoneEnumLiteralDeclaration_0() { return cNoneEnumLiteralDeclaration_0; }
		
		//'none'
		public Keyword getNoneNoneKeyword_0_0() { return cNoneNoneKeyword_0_0; }
		
		//Auto='auto'
		public EnumLiteralDeclaration getAutoEnumLiteralDeclaration_1() { return cAutoEnumLiteralDeclaration_1; }
		
		//'auto'
		public Keyword getAutoAutoKeyword_1_0() { return cAutoAutoKeyword_1_0; }
		
		//Fill='fill'
		public EnumLiteralDeclaration getFillEnumLiteralDeclaration_2() { return cFillEnumLiteralDeclaration_2; }
		
		//'fill'
		public Keyword getFillFillKeyword_2_0() { return cFillFillKeyword_2_0; }
	}
	public class PinResistorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.PinResistor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPullUpEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPullUpPull_upKeyword_0_0 = (Keyword)cPullUpEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPullDownEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPullDownPull_downKeyword_1_0 = (Keyword)cPullDownEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum PinResistor returns gpios::PinResistor:
		//	PullUp='pull_up' | PullDown='pull_down';
		public EnumRule getRule() { return rule; }
		
		//PullUp='pull_up' | PullDown='pull_down'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PullUp='pull_up'
		public EnumLiteralDeclaration getPullUpEnumLiteralDeclaration_0() { return cPullUpEnumLiteralDeclaration_0; }
		
		//'pull_up'
		public Keyword getPullUpPull_upKeyword_0_0() { return cPullUpPull_upKeyword_0_0; }
		
		//PullDown='pull_down'
		public EnumLiteralDeclaration getPullDownEnumLiteralDeclaration_1() { return cPullDownEnumLiteralDeclaration_1; }
		
		//'pull_down'
		public Keyword getPullDownPull_downKeyword_1_0() { return cPullDownPull_downKeyword_1_0; }
	}
	public class GpioInterruptModeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.GpioInterruptMode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cRisingEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cRisingRisingKeyword_0_0 = (Keyword)cRisingEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFallingEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFallingFallingKeyword_1_0 = (Keyword)cFallingEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cChangesEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cChangesChangesKeyword_2_0 = (Keyword)cChangesEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLowEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLowLowKeyword_3_0 = (Keyword)cLowEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cHighEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cHighHighKeyword_4_0 = (Keyword)cHighEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum GpioInterruptMode returns gpios::InterruptMode:
		//	Rising='rising' | Falling='falling' | Changes='changes' | Low='low' | High='high';
		public EnumRule getRule() { return rule; }
		
		//Rising='rising' | Falling='falling' | Changes='changes' | Low='low' | High='high'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Rising='rising'
		public EnumLiteralDeclaration getRisingEnumLiteralDeclaration_0() { return cRisingEnumLiteralDeclaration_0; }
		
		//'rising'
		public Keyword getRisingRisingKeyword_0_0() { return cRisingRisingKeyword_0_0; }
		
		//Falling='falling'
		public EnumLiteralDeclaration getFallingEnumLiteralDeclaration_1() { return cFallingEnumLiteralDeclaration_1; }
		
		//'falling'
		public Keyword getFallingFallingKeyword_1_0() { return cFallingFallingKeyword_1_0; }
		
		//Changes='changes'
		public EnumLiteralDeclaration getChangesEnumLiteralDeclaration_2() { return cChangesEnumLiteralDeclaration_2; }
		
		//'changes'
		public Keyword getChangesChangesKeyword_2_0() { return cChangesChangesKeyword_2_0; }
		
		//Low='low'
		public EnumLiteralDeclaration getLowEnumLiteralDeclaration_3() { return cLowEnumLiteralDeclaration_3; }
		
		//'low'
		public Keyword getLowLowKeyword_3_0() { return cLowLowKeyword_3_0; }
		
		//High='high'
		public EnumLiteralDeclaration getHighEnumLiteralDeclaration_4() { return cHighEnumLiteralDeclaration_4; }
		
		//'high'
		public Keyword getHighHighKeyword_4_0() { return cHighHighKeyword_4_0; }
	}
	public class DigitalPinStatusElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "es.udima.tfm.cesarlaso.IotDsl.DigitalPinStatus");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cHighEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cHighHighKeyword_0_0 = (Keyword)cHighEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLowEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLowLowKeyword_1_0 = (Keyword)cLowEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum DigitalPinStatus returns gpiosactuators::DigitalPinStatus:
		//	High='high' | Low='low';
		public EnumRule getRule() { return rule; }
		
		//High='high' | Low='low'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//High='high'
		public EnumLiteralDeclaration getHighEnumLiteralDeclaration_0() { return cHighEnumLiteralDeclaration_0; }
		
		//'high'
		public Keyword getHighHighKeyword_0_0() { return cHighHighKeyword_0_0; }
		
		//Low='low'
		public EnumLiteralDeclaration getLowEnumLiteralDeclaration_1() { return cLowEnumLiteralDeclaration_1; }
		
		//'low'
		public Keyword getLowLowKeyword_1_0() { return cLowLowKeyword_1_0; }
	}
	
	private final IotProyectElements pIotProyect;
	private final DeviceElements pDevice;
	private final ServerElements pServer;
	private final PinElements pPin;
	private final EventElements pEvent;
	private final TimerElements pTimer;
	private final ActuatorElements pActuator;
	private final RemoteIdentifierElements pRemoteIdentifier;
	private final EStringElements pEString;
	private final EIntElements pEInt;
	private final ELongElements pELong;
	private final ProgramElements pProgram;
	private final ProgramStateElements pProgramState;
	private final NetworkConnectedElements pNetworkConnected;
	private final NetworkDisconnectedElements pNetworkDisconnected;
	private final ServerConnectedElements pServerConnected;
	private final ServerDisconnectedElements pServerDisconnected;
	private final TimerEventElements pTimerEvent;
	private final NowElements pNow;
	private final RepeatedElements pRepeated;
	private final ClockElements pClock;
	private final CronElements pCron;
	private final GpioInterruptedElements pGpioInterrupted;
	private final GpioButtonInputElements pGpioButtonInput;
	private final GpioButtonInputAccumulatorElements pGpioButtonInputAccumulator;
	private final GpioButtonReleasedElements pGpioButtonReleased;
	private final GpioPulseInputElements pGpioPulseInput;
	private final GpioAnalogReadElements pGpioAnalogRead;
	private final GpioAnalogReadPerformOnHighElements pGpioAnalogReadPerformOnHigh;
	private final GpioAnalogReadPerformOnLowElements pGpioAnalogReadPerformOnLow;
	private final TimeElements pTime;
	private final TimeUnitValueElements pTimeUnitValue;
	private final TimeUnitTypeElements eTimeUnitType;
	private final FilePathElements pFilePath;
	private final RemoteEventElements pRemoteEvent;
	private final RemoteActuatorElements pRemoteActuator;
	private final SystemCommandElements pSystemCommand;
	private final DownloadElements pDownload;
	private final PlaySoundElements pPlaySound;
	private final BackgroundImageElements pBackgroundImage;
	private final DrawImageElements pDrawImage;
	private final PlayVideoElements pPlayVideo;
	private final ChangeStateActuatorElements pChangeStateActuator;
	private final ResizeTypeElements eResizeType;
	private final PinResistorElements ePinResistor;
	private final GpioInterruptModeElements eGpioInterruptMode;
	private final DigitalPinStatusElements eDigitalPinStatus;
	private final DigitalInputPinElements pDigitalInputPin;
	private final DigitalOutputPinElements pDigitalOutputPin;
	private final AnalogInputPinElements pAnalogInputPin;
	private final AnalogOutputPinElements pAnalogOutputPin;
	private final RemoteEventIdentifierElements pRemoteEventIdentifier;
	private final RemoteActuatorIdentifierElements pRemoteActuatorIdentifier;
	private final SequentialActuatorsElements pSequentialActuators;
	private final ChangeOutputElements pChangeOutput;
	private final ButtonOutputElements pButtonOutput;
	private final PulseOutputElements pPulseOutput;
	private final BlinkOutputElements pBlinkOutput;
	private final BlinkTimerOutputElements pBlinkTimerOutput;
	private final PwmElements pPwm;
	private final TransformToElements pTransformTo;
	private final WifiConfigurationElements pWifiConfiguration;
	private final SimulatorElements pSimulator;
	private final RaspberryElements pRaspberry;
	private final BeagleboneElements pBeaglebone;
	private final ESP8266Elements pESP8266;
	private final JavaServerElements pJavaServer;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public IotDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pIotProyect = new IotProyectElements();
		this.pDevice = new DeviceElements();
		this.pServer = new ServerElements();
		this.pPin = new PinElements();
		this.pEvent = new EventElements();
		this.pTimer = new TimerElements();
		this.pActuator = new ActuatorElements();
		this.pRemoteIdentifier = new RemoteIdentifierElements();
		this.pEString = new EStringElements();
		this.pEInt = new EIntElements();
		this.pELong = new ELongElements();
		this.pProgram = new ProgramElements();
		this.pProgramState = new ProgramStateElements();
		this.pNetworkConnected = new NetworkConnectedElements();
		this.pNetworkDisconnected = new NetworkDisconnectedElements();
		this.pServerConnected = new ServerConnectedElements();
		this.pServerDisconnected = new ServerDisconnectedElements();
		this.pTimerEvent = new TimerEventElements();
		this.pNow = new NowElements();
		this.pRepeated = new RepeatedElements();
		this.pClock = new ClockElements();
		this.pCron = new CronElements();
		this.pGpioInterrupted = new GpioInterruptedElements();
		this.pGpioButtonInput = new GpioButtonInputElements();
		this.pGpioButtonInputAccumulator = new GpioButtonInputAccumulatorElements();
		this.pGpioButtonReleased = new GpioButtonReleasedElements();
		this.pGpioPulseInput = new GpioPulseInputElements();
		this.pGpioAnalogRead = new GpioAnalogReadElements();
		this.pGpioAnalogReadPerformOnHigh = new GpioAnalogReadPerformOnHighElements();
		this.pGpioAnalogReadPerformOnLow = new GpioAnalogReadPerformOnLowElements();
		this.pTime = new TimeElements();
		this.pTimeUnitValue = new TimeUnitValueElements();
		this.eTimeUnitType = new TimeUnitTypeElements();
		this.pFilePath = new FilePathElements();
		this.pRemoteEvent = new RemoteEventElements();
		this.pRemoteActuator = new RemoteActuatorElements();
		this.pSystemCommand = new SystemCommandElements();
		this.pDownload = new DownloadElements();
		this.pPlaySound = new PlaySoundElements();
		this.pBackgroundImage = new BackgroundImageElements();
		this.pDrawImage = new DrawImageElements();
		this.pPlayVideo = new PlayVideoElements();
		this.pChangeStateActuator = new ChangeStateActuatorElements();
		this.eResizeType = new ResizeTypeElements();
		this.ePinResistor = new PinResistorElements();
		this.eGpioInterruptMode = new GpioInterruptModeElements();
		this.eDigitalPinStatus = new DigitalPinStatusElements();
		this.pDigitalInputPin = new DigitalInputPinElements();
		this.pDigitalOutputPin = new DigitalOutputPinElements();
		this.pAnalogInputPin = new AnalogInputPinElements();
		this.pAnalogOutputPin = new AnalogOutputPinElements();
		this.pRemoteEventIdentifier = new RemoteEventIdentifierElements();
		this.pRemoteActuatorIdentifier = new RemoteActuatorIdentifierElements();
		this.pSequentialActuators = new SequentialActuatorsElements();
		this.pChangeOutput = new ChangeOutputElements();
		this.pButtonOutput = new ButtonOutputElements();
		this.pPulseOutput = new PulseOutputElements();
		this.pBlinkOutput = new BlinkOutputElements();
		this.pBlinkTimerOutput = new BlinkTimerOutputElements();
		this.pPwm = new PwmElements();
		this.pTransformTo = new TransformToElements();
		this.pWifiConfiguration = new WifiConfigurationElements();
		this.pSimulator = new SimulatorElements();
		this.pRaspberry = new RaspberryElements();
		this.pBeaglebone = new BeagleboneElements();
		this.pESP8266 = new ESP8266Elements();
		this.pJavaServer = new JavaServerElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("es.udima.tfm.cesarlaso.IotDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//IotProyect:
	//	'IotProyect'
	//	name=EString
	//	'{'
	//	'product_code' productCode=EInt
	//	'version' version=EInt
	//	'devices' '{' deploymentDevice+=Device ("," deploymentDevice+=Device)* '}'
	//	'servers' '{' server+=Server ("," server+=Server)* '}'
	//	program=Program
	//	'}';
	public IotProyectElements getIotProyectAccess() {
		return pIotProyect;
	}
	
	public ParserRule getIotProyectRule() {
		return getIotProyectAccess().getRule();
	}
	
	//Device deploymentdevices::Device:
	//	Simulator | Raspberry | Beaglebone | ESP8266;
	public DeviceElements getDeviceAccess() {
		return pDevice;
	}
	
	public ParserRule getDeviceRule() {
		return getDeviceAccess().getRule();
	}
	
	//Server servers::Server:
	//	JavaServer;
	public ServerElements getServerAccess() {
		return pServer;
	}
	
	public ParserRule getServerRule() {
		return getServerAccess().getRule();
	}
	
	//Pin gpios::Pin:
	//	DigitalInputPin | DigitalOutputPin | AnalogInputPin | AnalogOutputPin;
	public PinElements getPinAccess() {
		return pPin;
	}
	
	public ParserRule getPinRule() {
		return getPinAccess().getRule();
	}
	
	//Event events::Event:
	//	GpioInterrupted | GpioButtonInput | GpioButtonInputAccumulator | GpioButtonReleased | GpioPulseInput | GpioAnalogRead
	//	| GpioAnalogReadPerformOnHigh | GpioAnalogReadPerformOnLow | TimerEvent | RemoteEvent | NetworkConnected |
	//	NetworkDisconnected | ServerConnected | ServerDisconnected;
	public EventElements getEventAccess() {
		return pEvent;
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}
	
	//Timer timers::Timer:
	//	Now | Repeated | Clock | Cron;
	public TimerElements getTimerAccess() {
		return pTimer;
	}
	
	public ParserRule getTimerRule() {
		return getTimerAccess().getRule();
	}
	
	//Actuator events::Actuator:
	//	SequentialActuators | ChangeOutput | ButtonOutput | PulseOutput | BlinkOutput | BlinkTimerOutput | Pwm | TransformTo |
	//	RemoteActuator | SystemCommand | Download | PlaySound | BackgroundImage | DrawImage | PlayVideo | ChangeStateActuator;
	public ActuatorElements getActuatorAccess() {
		return pActuator;
	}
	
	public ParserRule getActuatorRule() {
		return getActuatorAccess().getRule();
	}
	
	//RemoteIdentifier communicationsprograms::RemoteIdentifier:
	//	RemoteEventIdentifier | RemoteActuatorIdentifier;
	public RemoteIdentifierElements getRemoteIdentifierAccess() {
		return pRemoteIdentifier;
	}
	
	public ParserRule getRemoteIdentifierRule() {
		return getRemoteIdentifierAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//ELong ecore::ELong:
	//	'-'? INT;
	public ELongElements getELongAccess() {
		return pELong;
	}
	
	public ParserRule getELongRule() {
		return getELongAccess().getRule();
	}
	
	//Program programs::Program:
	//	'program'
	//	'{' ('gpio_aliases' '{' gpioAliases+=Pin ("," gpioAliases+=Pin)* '}')? ('remote_identifiers' '{'
	//	remoteIdentifiers+=RemoteIdentifier ("," remoteIdentifiers+=RemoteIdentifier)* '}')? ('files' '{' files+=FilePath (","
	//	files+=FilePath)* '}')?
	//	'start_state' state=[programs::ProgramState|EString]
	//	'states' '{' states+=ProgramState ("," states+=ProgramState)* '}'
	//	'}';
	public ProgramElements getProgramAccess() {
		return pProgram;
	}
	
	public ParserRule getProgramRule() {
		return getProgramAccess().getRule();
	}
	
	//ProgramState programs::ProgramState:
	//	'state'
	//	name=EString
	//	'{' events+=Event ("," events+=Event)* '}';
	public ProgramStateElements getProgramStateAccess() {
		return pProgramState;
	}
	
	public ParserRule getProgramStateRule() {
		return getProgramStateAccess().getRule();
	}
	
	//NetworkConnected communicationsevents::NetworkConnected:
	//	'network_connected'
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
	public NetworkConnectedElements getNetworkConnectedAccess() {
		return pNetworkConnected;
	}
	
	public ParserRule getNetworkConnectedRule() {
		return getNetworkConnectedAccess().getRule();
	}
	
	//NetworkDisconnected communicationsevents::NetworkDisconnected:
	//	'network_disconnected'
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
	public NetworkDisconnectedElements getNetworkDisconnectedAccess() {
		return pNetworkDisconnected;
	}
	
	public ParserRule getNetworkDisconnectedRule() {
		return getNetworkDisconnectedAccess().getRule();
	}
	
	//ServerConnected communicationsevents::ServerConnected:
	//	'server_connected'
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
	public ServerConnectedElements getServerConnectedAccess() {
		return pServerConnected;
	}
	
	public ParserRule getServerConnectedRule() {
		return getServerConnectedAccess().getRule();
	}
	
	//ServerDisconnected communicationsevents::ServerDisconnected:
	//	'server_disconnected'
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
	public ServerDisconnectedElements getServerDisconnectedAccess() {
		return pServerDisconnected;
	}
	
	public ParserRule getServerDisconnectedRule() {
		return getServerDisconnectedAccess().getRule();
	}
	
	//TimerEvent timers::TimerEvent:
	//	'timer'
	//	'{'
	//	timer=Timer
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}'
	//	'}';
	public TimerEventElements getTimerEventAccess() {
		return pTimerEvent;
	}
	
	public ParserRule getTimerEventRule() {
		return getTimerEventAccess().getRule();
	}
	
	//Now timers::Now:
	//	'now' {timers::Now};
	public NowElements getNowAccess() {
		return pNow;
	}
	
	public ParserRule getNowRule() {
		return getNowAccess().getRule();
	}
	
	//Repeated timers::Repeated:
	//	'repeat_every'
	//	value=TimeUnitValue;
	public RepeatedElements getRepeatedAccess() {
		return pRepeated;
	}
	
	public ParserRule getRepeatedRule() {
		return getRepeatedAccess().getRule();
	}
	
	//Clock timers::Clock:
	//	'clock'
	//	value=Time;
	public ClockElements getClockAccess() {
		return pClock;
	}
	
	public ParserRule getClockRule() {
		return getClockAccess().getRule();
	}
	
	//Cron timers::Cron:
	//	'cron'
	//	value=EString;
	public CronElements getCronAccess() {
		return pCron;
	}
	
	public ParserRule getCronRule() {
		return getCronAccess().getRule();
	}
	
	//GpioInterrupted gpiosevents::Interrupted:
	//	'interrupted'
	//	pin=[gpios::DigitalInputPin|EString] mode=GpioInterruptMode
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
	public GpioInterruptedElements getGpioInterruptedAccess() {
		return pGpioInterrupted;
	}
	
	public ParserRule getGpioInterruptedRule() {
		return getGpioInterruptedAccess().getRule();
	}
	
	//GpioButtonInput gpiosevents::ButtonInput:
	//	'button'
	//	pin=[gpios::DigitalInputPin|EString]
	//	'{'
	//	'mode' mode=PinResistor
	//	'min_duration' minDuration=EInt
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}'
	//	'}';
	public GpioButtonInputElements getGpioButtonInputAccess() {
		return pGpioButtonInput;
	}
	
	public ParserRule getGpioButtonInputRule() {
		return getGpioButtonInputAccess().getRule();
	}
	
	//GpioButtonInputAccumulator gpiosevents::ButtonInputAccumulator:
	//	'button_acumulator'
	//	pin=[gpios::DigitalInputPin|EString]
	//	'{'
	//	'mode' mode=PinResistor
	//	'min_duration' minDuration=EInt
	//	'count' count=EInt
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}'
	//	'}';
	public GpioButtonInputAccumulatorElements getGpioButtonInputAccumulatorAccess() {
		return pGpioButtonInputAccumulator;
	}
	
	public ParserRule getGpioButtonInputAccumulatorRule() {
		return getGpioButtonInputAccumulatorAccess().getRule();
	}
	
	//GpioButtonReleased gpiosevents::ButtonInputReleased:
	//	'button_released'
	//	pin=[gpios::DigitalInputPin|EString]
	//	'{'
	//	'mode' mode=PinResistor
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}'
	//	'}';
	public GpioButtonReleasedElements getGpioButtonReleasedAccess() {
		return pGpioButtonReleased;
	}
	
	public ParserRule getGpioButtonReleasedRule() {
		return getGpioButtonReleasedAccess().getRule();
	}
	
	//GpioPulseInput gpiosevents::PulseInput:
	//	'pulse_input'
	//	pin=[gpios::DigitalInputPin|EString]
	//	'{'
	//	'mode' mode=PinResistor
	//	'count' count=EInt
	//	'width' width=EInt
	//	'space_width' spaceWidth=EInt
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}'
	//	'}';
	public GpioPulseInputElements getGpioPulseInputAccess() {
		return pGpioPulseInput;
	}
	
	public ParserRule getGpioPulseInputRule() {
		return getGpioPulseInputAccess().getRule();
	}
	
	//GpioAnalogRead gpiosevents::AnalogRead:
	//	'analog_read'
	//	pin=[gpios::AnalogInputPin|EString]
	//	'every' pollIntervalLoops=EInt 'loops'
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
	public GpioAnalogReadElements getGpioAnalogReadAccess() {
		return pGpioAnalogRead;
	}
	
	public ParserRule getGpioAnalogReadRule() {
		return getGpioAnalogReadAccess().getRule();
	}
	
	//GpioAnalogReadPerformOnHigh gpiosevents::AnalogReadPerformOnHigh:
	//	'analog_read_on_high'
	//	pin=[gpios::AnalogInputPin|EString]
	//	'every' pollIntervalLoops=EInt 'loops'
	//	'value_higher_than' value=EInt
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
	public GpioAnalogReadPerformOnHighElements getGpioAnalogReadPerformOnHighAccess() {
		return pGpioAnalogReadPerformOnHigh;
	}
	
	public ParserRule getGpioAnalogReadPerformOnHighRule() {
		return getGpioAnalogReadPerformOnHighAccess().getRule();
	}
	
	//GpioAnalogReadPerformOnLow gpiosevents::AnalogReadPerformOnLow:
	//	'analog_read_on_low'
	//	pin=[gpios::AnalogInputPin|EString]
	//	'every' pollIntervalLoops=EInt 'loops'
	//	'value_lower_than' value=EInt
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
	public GpioAnalogReadPerformOnLowElements getGpioAnalogReadPerformOnLowAccess() {
		return pGpioAnalogReadPerformOnLow;
	}
	
	public ParserRule getGpioAnalogReadPerformOnLowRule() {
		return getGpioAnalogReadPerformOnLowAccess().getRule();
	}
	
	//Time timers::Time:
	//	hour=EInt 'h' minute=EInt 'm' second=EInt 's';
	public TimeElements getTimeAccess() {
		return pTime;
	}
	
	public ParserRule getTimeRule() {
		return getTimeAccess().getRule();
	}
	
	//TimeUnitValue timers::TimeUnitValue:
	//	value=EInt
	//	unit=TimeUnitType;
	public TimeUnitValueElements getTimeUnitValueAccess() {
		return pTimeUnitValue;
	}
	
	public ParserRule getTimeUnitValueRule() {
		return getTimeUnitValueAccess().getRule();
	}
	
	//enum TimeUnitType returns timers::TimeUnitType:
	//	Millisecond | Second | Minute | Hour;
	public TimeUnitTypeElements getTimeUnitTypeAccess() {
		return eTimeUnitType;
	}
	
	public EnumRule getTimeUnitTypeRule() {
		return getTimeUnitTypeAccess().getRule();
	}
	
	//FilePath operatingsystemactuators::FilePath:
	//	'file_path'
	//	name=EString
	//	'with_path'
	//	filePath=EString;
	public FilePathElements getFilePathAccess() {
		return pFilePath;
	}
	
	public ParserRule getFilePathRule() {
		return getFilePathAccess().getRule();
	}
	
	//RemoteEvent communicationsprograms::RemoteEvent:
	//	'remote_event'
	//	identifier=[communicationsprograms::RemoteEventIdentifier|EString]
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
	public RemoteEventElements getRemoteEventAccess() {
		return pRemoteEvent;
	}
	
	public ParserRule getRemoteEventRule() {
		return getRemoteEventAccess().getRule();
	}
	
	//RemoteActuator communicationsprograms::RemoteActuator:
	//	'remote_actuator'
	//	identifier=[communicationsprograms::RemoteActuatorIdentifier|EString];
	public RemoteActuatorElements getRemoteActuatorAccess() {
		return pRemoteActuator;
	}
	
	public ParserRule getRemoteActuatorRule() {
		return getRemoteActuatorAccess().getRule();
	}
	
	//SystemCommand operatingsystemactuators::SystemCommand:
	//	'system_command'
	//	filePath=[operatingsystemactuators::FilePath|EString];
	public SystemCommandElements getSystemCommandAccess() {
		return pSystemCommand;
	}
	
	public ParserRule getSystemCommandRule() {
		return getSystemCommandAccess().getRule();
	}
	
	//Download operatingsystemactuators::Download:
	//	'download'
	//	url=EString
	//	'to'
	//	filePath=[operatingsystemactuators::FilePath|EString];
	public DownloadElements getDownloadAccess() {
		return pDownload;
	}
	
	public ParserRule getDownloadRule() {
		return getDownloadAccess().getRule();
	}
	
	//PlaySound operatingsystemactuators::PlaySound:
	//	'play_sound' ('with_volume' volume=EInt)?
	//	filePath=[operatingsystemactuators::FilePath|EString];
	public PlaySoundElements getPlaySoundAccess() {
		return pPlaySound;
	}
	
	public ParserRule getPlaySoundRule() {
		return getPlaySoundAccess().getRule();
	}
	
	//BackgroundImage operatingsystemactuators::BackgroundImage:
	//	'background_image'
	//	filePath=[operatingsystemactuators::FilePath|EString] resizeType=ResizeType;
	public BackgroundImageElements getBackgroundImageAccess() {
		return pBackgroundImage;
	}
	
	public ParserRule getBackgroundImageRule() {
		return getBackgroundImageAccess().getRule();
	}
	
	//DrawImage operatingsystemactuators::DrawImage:
	//	'draw_image'
	//	filePath=[operatingsystemactuators::FilePath|EString]
	//	'{'
	//	'x' positionX=EInt
	//	'y' positionY=EInt
	//	'z' positionZ=EInt
	//	'color' color=ELong
	//	'resize' resizeType=ResizeType
	//	'}';
	public DrawImageElements getDrawImageAccess() {
		return pDrawImage;
	}
	
	public ParserRule getDrawImageRule() {
		return getDrawImageAccess().getRule();
	}
	
	//PlayVideo operatingsystemactuators::PlayVideo:
	//	'play_video'
	//	filePath=[operatingsystemactuators::FilePath|EString]
	//	'{'
	//	'x' positionX=EInt
	//	'y' positionY=EInt
	//	'z' positionZ=EInt
	//	'color' color=ELong
	//	'resize' resizeType=ResizeType
	//	'}';
	public PlayVideoElements getPlayVideoAccess() {
		return pPlayVideo;
	}
	
	public ParserRule getPlayVideoRule() {
		return getPlayVideoAccess().getRule();
	}
	
	//ChangeStateActuator programs::ChangeStateActuator:
	//	'change_state'
	//	state=[programs::ProgramState|EString];
	public ChangeStateActuatorElements getChangeStateActuatorAccess() {
		return pChangeStateActuator;
	}
	
	public ParserRule getChangeStateActuatorRule() {
		return getChangeStateActuatorAccess().getRule();
	}
	
	//enum ResizeType returns operatingsystemactuators::ResizeType:
	//	None='none' | Auto='auto' | Fill='fill';
	public ResizeTypeElements getResizeTypeAccess() {
		return eResizeType;
	}
	
	public EnumRule getResizeTypeRule() {
		return getResizeTypeAccess().getRule();
	}
	
	//enum PinResistor returns gpios::PinResistor:
	//	PullUp='pull_up' | PullDown='pull_down';
	public PinResistorElements getPinResistorAccess() {
		return ePinResistor;
	}
	
	public EnumRule getPinResistorRule() {
		return getPinResistorAccess().getRule();
	}
	
	//enum GpioInterruptMode returns gpios::InterruptMode:
	//	Rising='rising' | Falling='falling' | Changes='changes' | Low='low' | High='high';
	public GpioInterruptModeElements getGpioInterruptModeAccess() {
		return eGpioInterruptMode;
	}
	
	public EnumRule getGpioInterruptModeRule() {
		return getGpioInterruptModeAccess().getRule();
	}
	
	//enum DigitalPinStatus returns gpiosactuators::DigitalPinStatus:
	//	High='high' | Low='low';
	public DigitalPinStatusElements getDigitalPinStatusAccess() {
		return eDigitalPinStatus;
	}
	
	public EnumRule getDigitalPinStatusRule() {
		return getDigitalPinStatusAccess().getRule();
	}
	
	//DigitalInputPin gpios::DigitalInputPin:
	//	'gpio_input_digital'
	//	name=EString
	//	'connected_to_pin'
	//	number=EInt;
	public DigitalInputPinElements getDigitalInputPinAccess() {
		return pDigitalInputPin;
	}
	
	public ParserRule getDigitalInputPinRule() {
		return getDigitalInputPinAccess().getRule();
	}
	
	//DigitalOutputPin gpios::DigitalOutputPin:
	//	'gpio_output_digital'
	//	name=EString
	//	'connected_to_pin'
	//	number=EInt;
	public DigitalOutputPinElements getDigitalOutputPinAccess() {
		return pDigitalOutputPin;
	}
	
	public ParserRule getDigitalOutputPinRule() {
		return getDigitalOutputPinAccess().getRule();
	}
	
	//AnalogInputPin gpios::AnalogInputPin:
	//	'gpio_input_analog'
	//	name=EString
	//	'connected_to_pin'
	//	number=EInt;
	public AnalogInputPinElements getAnalogInputPinAccess() {
		return pAnalogInputPin;
	}
	
	public ParserRule getAnalogInputPinRule() {
		return getAnalogInputPinAccess().getRule();
	}
	
	//AnalogOutputPin gpios::AnalogOutputPin:
	//	'gpio_output_analog'
	//	name=EString
	//	'connected_to_pin'
	//	number=EInt;
	public AnalogOutputPinElements getAnalogOutputPinAccess() {
		return pAnalogOutputPin;
	}
	
	public ParserRule getAnalogOutputPinRule() {
		return getAnalogOutputPinAccess().getRule();
	}
	
	//RemoteEventIdentifier communicationsprograms::RemoteEventIdentifier:
	//	'remote_event_identifier'
	//	name=EString;
	public RemoteEventIdentifierElements getRemoteEventIdentifierAccess() {
		return pRemoteEventIdentifier;
	}
	
	public ParserRule getRemoteEventIdentifierRule() {
		return getRemoteEventIdentifierAccess().getRule();
	}
	
	//RemoteActuatorIdentifier communicationsprograms::RemoteActuatorIdentifier:
	//	'remote_actuator_identifier'
	//	name=EString;
	public RemoteActuatorIdentifierElements getRemoteActuatorIdentifierAccess() {
		return pRemoteActuatorIdentifier;
	}
	
	public ParserRule getRemoteActuatorIdentifierRule() {
		return getRemoteActuatorIdentifierAccess().getRule();
	}
	
	//SequentialActuators events::SequentialActuators:
	//	'sequential'
	//	'{' actuators+=Actuator ("," actuators+=Actuator)* '}';
	public SequentialActuatorsElements getSequentialActuatorsAccess() {
		return pSequentialActuators;
	}
	
	public ParserRule getSequentialActuatorsRule() {
		return getSequentialActuatorsAccess().getRule();
	}
	
	//ChangeOutput gpiosactuators::ChangeOutput:
	//	'change'
	//	pin=[gpios::DigitalOutputPin|EString] status=DigitalPinStatus;
	public ChangeOutputElements getChangeOutputAccess() {
		return pChangeOutput;
	}
	
	public ParserRule getChangeOutputRule() {
		return getChangeOutputAccess().getRule();
	}
	
	//ButtonOutput gpiosactuators::ButtonOutput:
	//	'button'
	//	pin=[gpios::DigitalOutputPin|EString]
	//	'duration' duration=TimeUnitValue;
	public ButtonOutputElements getButtonOutputAccess() {
		return pButtonOutput;
	}
	
	public ParserRule getButtonOutputRule() {
		return getButtonOutputAccess().getRule();
	}
	
	//PulseOutput gpiosactuators::PulseOutput:
	//	'pulse'
	//	pin=[gpios::DigitalOutputPin|EString]
	//	'{'
	//	'times' count=EInt
	//	'width' width=EInt 'ms'
	//	'space_width' spaceWidth=EInt 'ms'
	//	'}';
	public PulseOutputElements getPulseOutputAccess() {
		return pPulseOutput;
	}
	
	public ParserRule getPulseOutputRule() {
		return getPulseOutputAccess().getRule();
	}
	
	//BlinkOutput gpiosactuators::BlinkOutput:
	//	'blink'
	//	pin=[gpios::DigitalOutputPin|EString]
	//	'interval' interval=TimeUnitValue;
	public BlinkOutputElements getBlinkOutputAccess() {
		return pBlinkOutput;
	}
	
	public ParserRule getBlinkOutputRule() {
		return getBlinkOutputAccess().getRule();
	}
	
	//BlinkTimerOutput gpiosactuators::BlinkTimerOutput:
	//	'blink_timer'
	//	pin=[gpios::DigitalOutputPin|EString]
	//	'{'
	//	'during' duration=TimeUnitValue
	//	'interval' interval=TimeUnitValue
	//	'}';
	public BlinkTimerOutputElements getBlinkTimerOutputAccess() {
		return pBlinkTimerOutput;
	}
	
	public ParserRule getBlinkTimerOutputRule() {
		return getBlinkTimerOutputAccess().getRule();
	}
	
	//Pwm gpiosactuators::Pwm:
	//	'pwm'
	//	pin=[gpios::AnalogOutputPin|EString]
	//	'{'
	//	'value' value=EInt
	//	'}';
	public PwmElements getPwmAccess() {
		return pPwm;
	}
	
	public ParserRule getPwmRule() {
		return getPwmAccess().getRule();
	}
	
	//TransformTo gpiosactuators::TransformTo:
	//	'pwm_transform'
	//	pin=[gpios::AnalogOutputPin|EString]
	//	'{'
	//	'value' value=EInt
	//	'duration' duration=TimeUnitValue
	//	'}';
	public TransformToElements getTransformToAccess() {
		return pTransformTo;
	}
	
	public ParserRule getTransformToRule() {
		return getTransformToAccess().getRule();
	}
	
	//WifiConfiguration deploymentdevices::WifiConfiguration:
	//	'ssid'
	//	ssid=EString
	//	'with_password'
	//	password=EString;
	public WifiConfigurationElements getWifiConfigurationAccess() {
		return pWifiConfiguration;
	}
	
	public ParserRule getWifiConfigurationRule() {
		return getWifiConfigurationAccess().getRule();
	}
	
	//Simulator deploymentdevices::Simulator:
	//	{deploymentdevices::Simulator}
	//	'simulator';
	public SimulatorElements getSimulatorAccess() {
		return pSimulator;
	}
	
	public ParserRule getSimulatorRule() {
		return getSimulatorAccess().getRule();
	}
	
	//Raspberry deploymentdevices::Raspberry:
	//	{deploymentdevices::Raspberry}
	//	'raspberry' ('{' wifiConfiguration=WifiConfiguration '}')?;
	public RaspberryElements getRaspberryAccess() {
		return pRaspberry;
	}
	
	public ParserRule getRaspberryRule() {
		return getRaspberryAccess().getRule();
	}
	
	//Beaglebone deploymentdevices::Beaglebone:
	//	{deploymentdevices::Beaglebone}
	//	'beaglebone' ('{' wifiConfiguration=WifiConfiguration '}')?;
	public BeagleboneElements getBeagleboneAccess() {
		return pBeaglebone;
	}
	
	public ParserRule getBeagleboneRule() {
		return getBeagleboneAccess().getRule();
	}
	
	//ESP8266 deploymentdevices::ESP8266:
	//	{deploymentdevices::ESP8266}
	//	'esp8266' ('{' wifiConfiguration=WifiConfiguration '}')?;
	public ESP8266Elements getESP8266Access() {
		return pESP8266;
	}
	
	public ParserRule getESP8266Rule() {
		return getESP8266Access().getRule();
	}
	
	//JavaServer servers::JavaServer:
	//	'java_server'
	//	'{'
	//	'network_interface_address' networkInterfaceAddress=EString
	//	'network_interface_port' networkInterfacePort=EInt
	//	'}';
	public JavaServerElements getJavaServerAccess() {
		return pJavaServer;
	}
	
	public ParserRule getJavaServerRule() {
		return getJavaServerAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
