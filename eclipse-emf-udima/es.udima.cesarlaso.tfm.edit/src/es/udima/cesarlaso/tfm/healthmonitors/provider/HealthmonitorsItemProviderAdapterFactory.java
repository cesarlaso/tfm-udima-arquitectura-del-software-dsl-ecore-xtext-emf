/**
 */
package es.udima.cesarlaso.tfm.healthmonitors.provider;

import es.udima.cesarlaso.tfm.healthmonitors.util.HealthmonitorsAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class HealthmonitorsItemProviderAdapterFactory extends HealthmonitorsAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public HealthmonitorsItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.StoragePartition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StoragePartitionItemProvider storagePartitionItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.StoragePartition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStoragePartitionAdapter() {
		if (storagePartitionItemProvider == null) {
			storagePartitionItemProvider = new StoragePartitionItemProvider(this);
		}

		return storagePartitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.StorageStats} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StorageStatsItemProvider storageStatsItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.StorageStats}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStorageStatsAdapter() {
		if (storageStatsItemProvider == null) {
			storageStatsItemProvider = new StorageStatsItemProvider(this);
		}

		return storageStatsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.NetworkInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NetworkInterfaceItemProvider networkInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.NetworkInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNetworkInterfaceAdapter() {
		if (networkInterfaceItemProvider == null) {
			networkInterfaceItemProvider = new NetworkInterfaceItemProvider(this);
		}

		return networkInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.CpuLoadItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CpuLoadItemItemProvider cpuLoadItemItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.CpuLoadItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCpuLoadItemAdapter() {
		if (cpuLoadItemItemProvider == null) {
			cpuLoadItemItemProvider = new CpuLoadItemItemProvider(this);
		}

		return cpuLoadItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.RamLoadItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RamLoadItemItemProvider ramLoadItemItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.RamLoadItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRamLoadItemAdapter() {
		if (ramLoadItemItemProvider == null) {
			ramLoadItemItemProvider = new RamLoadItemItemProvider(this);
		}

		return ramLoadItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.CpuTemperatureItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CpuTemperatureItemItemProvider cpuTemperatureItemItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.CpuTemperatureItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCpuTemperatureItemAdapter() {
		if (cpuTemperatureItemItemProvider == null) {
			cpuTemperatureItemItemProvider = new CpuTemperatureItemItemProvider(this);
		}

		return cpuTemperatureItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.GpuTemperatureItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GpuTemperatureItemItemProvider gpuTemperatureItemItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.GpuTemperatureItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGpuTemperatureItemAdapter() {
		if (gpuTemperatureItemItemProvider == null) {
			gpuTemperatureItemItemProvider = new GpuTemperatureItemItemProvider(this);
		}

		return gpuTemperatureItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.StorageItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StorageItemItemProvider storageItemItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.StorageItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStorageItemAdapter() {
		if (storageItemItemProvider == null) {
			storageItemItemProvider = new StorageItemItemProvider(this);
		}

		return storageItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.NetworkItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NetworkItemItemProvider networkItemItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.NetworkItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNetworkItemAdapter() {
		if (networkItemItemProvider == null) {
			networkItemItemProvider = new NetworkItemItemProvider(this);
		}

		return networkItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.CpuLoadData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CpuLoadDataItemProvider cpuLoadDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.CpuLoadData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCpuLoadDataAdapter() {
		if (cpuLoadDataItemProvider == null) {
			cpuLoadDataItemProvider = new CpuLoadDataItemProvider(this);
		}

		return cpuLoadDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.RamLoadData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RamLoadDataItemProvider ramLoadDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.RamLoadData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRamLoadDataAdapter() {
		if (ramLoadDataItemProvider == null) {
			ramLoadDataItemProvider = new RamLoadDataItemProvider(this);
		}

		return ramLoadDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.CpuTemperatureData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CpuTemperatureDataItemProvider cpuTemperatureDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.CpuTemperatureData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCpuTemperatureDataAdapter() {
		if (cpuTemperatureDataItemProvider == null) {
			cpuTemperatureDataItemProvider = new CpuTemperatureDataItemProvider(this);
		}

		return cpuTemperatureDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.GpuTemperatureData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GpuTemperatureDataItemProvider gpuTemperatureDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.GpuTemperatureData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGpuTemperatureDataAdapter() {
		if (gpuTemperatureDataItemProvider == null) {
			gpuTemperatureDataItemProvider = new GpuTemperatureDataItemProvider(this);
		}

		return gpuTemperatureDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.StorageData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StorageDataItemProvider storageDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.StorageData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStorageDataAdapter() {
		if (storageDataItemProvider == null) {
			storageDataItemProvider = new StorageDataItemProvider(this);
		}

		return storageDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.udima.cesarlaso.tfm.healthmonitors.NetworkData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NetworkDataItemProvider networkDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.udima.cesarlaso.tfm.healthmonitors.NetworkData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNetworkDataAdapter() {
		if (networkDataItemProvider == null) {
			networkDataItemProvider = new NetworkDataItemProvider(this);
		}

		return networkDataItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (storagePartitionItemProvider != null) storagePartitionItemProvider.dispose();
		if (storageStatsItemProvider != null) storageStatsItemProvider.dispose();
		if (networkInterfaceItemProvider != null) networkInterfaceItemProvider.dispose();
		if (cpuLoadItemItemProvider != null) cpuLoadItemItemProvider.dispose();
		if (ramLoadItemItemProvider != null) ramLoadItemItemProvider.dispose();
		if (cpuTemperatureItemItemProvider != null) cpuTemperatureItemItemProvider.dispose();
		if (gpuTemperatureItemItemProvider != null) gpuTemperatureItemItemProvider.dispose();
		if (storageItemItemProvider != null) storageItemItemProvider.dispose();
		if (networkItemItemProvider != null) networkItemItemProvider.dispose();
		if (cpuLoadDataItemProvider != null) cpuLoadDataItemProvider.dispose();
		if (ramLoadDataItemProvider != null) ramLoadDataItemProvider.dispose();
		if (cpuTemperatureDataItemProvider != null) cpuTemperatureDataItemProvider.dispose();
		if (gpuTemperatureDataItemProvider != null) gpuTemperatureDataItemProvider.dispose();
		if (storageDataItemProvider != null) storageDataItemProvider.dispose();
		if (networkDataItemProvider != null) networkDataItemProvider.dispose();
	}

}
