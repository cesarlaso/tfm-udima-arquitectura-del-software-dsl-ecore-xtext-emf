/**
 */
package es.udima.cesarlaso.tfm.gpiosactuators.provider;


import es.udima.cesarlaso.tfm.events.EventsPackage;

import es.udima.cesarlaso.tfm.events.provider.ActuatorItemProvider;

import es.udima.cesarlaso.tfm.gpiosactuators.GpiosactuatorsFactory;

import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;

/**
 * This is the item provider adapter for a {@link es.udima.cesarlaso.tfm.gpiosactuators.GpioActuator} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class GpioActuatorItemProvider extends ActuatorItemProvider {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public GpioActuatorItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

		}
		return itemPropertyDescriptors;
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String getText(Object object) {
		return getString("_UI_GpioActuator_type");
	}
	

	/**
	 * This handles model notifications by calling {@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);

		newChildDescriptors.add
			(createChildParameter
				(EventsPackage.Literals.ACTUATOR__FINISHED,
				 GpiosactuatorsFactory.eINSTANCE.createChangeOutput()));

		newChildDescriptors.add
			(createChildParameter
				(EventsPackage.Literals.ACTUATOR__FINISHED,
				 GpiosactuatorsFactory.eINSTANCE.createButtonOutput()));

		newChildDescriptors.add
			(createChildParameter
				(EventsPackage.Literals.ACTUATOR__FINISHED,
				 GpiosactuatorsFactory.eINSTANCE.createPulseOutput()));

		newChildDescriptors.add
			(createChildParameter
				(EventsPackage.Literals.ACTUATOR__FINISHED,
				 GpiosactuatorsFactory.eINSTANCE.createBlinkOutput()));

		newChildDescriptors.add
			(createChildParameter
				(EventsPackage.Literals.ACTUATOR__FINISHED,
				 GpiosactuatorsFactory.eINSTANCE.createBlinkTimerOutput()));

		newChildDescriptors.add
			(createChildParameter
				(EventsPackage.Literals.ACTUATOR__FINISHED,
				 GpiosactuatorsFactory.eINSTANCE.createPwm()));

		newChildDescriptors.add
			(createChildParameter
				(EventsPackage.Literals.ACTUATOR__FINISHED,
				 GpiosactuatorsFactory.eINSTANCE.createTransformTo()));
	}

	/**
	 * Return the resource locator for this item provider's resources.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ResourceLocator getResourceLocator() {
		return GpiosActuatorsEditPlugin.INSTANCE;
	}

}
